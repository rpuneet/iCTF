{"version":3,"sources":["validation/is-empty.js","utils/setAuthToken.js","actions/authAction.js","actions/types.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/challengeReducer.js","reducers/notificationReducer.js","reducers/gameSettingReducer.js","reducers/index.js","store.js","components/Navbar/InertiaLogo/InertiaLogo.js","components/Navbar/Navbar.js","actions/gameSettingAction.js","components/Clock/Clock.js","components/Landing/Landing.js","components/Register/Register.js","components/Login/Login.js","actions/challengeAction.js","components/Challenges/Category/Challenge/Challenge.js","components/Challenges/Category/Category.js","components/Challenges/Challenges.js","components/common/PrivateRoute.js","components/Leaderboard/Leaderboard.js","components/Dashboard/Dashboard.js","components/Notifications/Notifications.js","actions/notificationsAction.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","value","undefined","Object","keys","length","trim","setAuthToken","token","axios","defaults","headers","common","setCurrentTeam","teamData","type","payload","logoutTeam","dispatch","localStorage","removeItem","initialState","isAuthenticated","team","challenge","challenges","notifications","settings","combineReducers","errors","state","arguments","action","auth","isEmpty","objectSpread","notification","gameSetting","middlewares","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","InertiaLogo","props","react_default","a","createElement","className","react_router_dom","to","Navbar","activeItem","onLogoutHandler","_this","onMenuItemClick","e","_ref","name","setState","this","location","href","split","navigations","Menu","position","Item","active","onClick","style","fontFamily","fontSize","padding","margin","color","Icon","pointing","secondary","Navbar_InertiaLogo_InertiaLogo","Component","connect","getGameSettings","get","then","res","data","catch","err","response","Clock","_this$props","start","end","Date","Container","Segment","raised","inverted","padded","Header","as","dist_default","format","Landing","fluid","event","organisation","components_Clock_Clock","startTime","endTime","Register","handle","email","password","confirmPassword","onChangeHandler","defineProperty","target","onSubmitHandler","newTeam","registerTeam","history","push","nextProps","width","borderRadius","border","Form","Input","placeholder","onChange","error","Button","post","Login","loginTeam","setItem","jwt_decode","getChallenges","Challenge","show","flag","solved","onFlagSubmit","concat","_id","verdict","_this2","solvedBy","filter","toString","id","errorLabel","_this$props$challenge","description","solved_input","Label","basic","size","Card","link","Content","Meta","extra","Description","icon","circular","Category","onClickShow","map","index","Category_Challenge_Challenge","key","total","category","toUpperCase","Group","Challenges","contestRunning","current","now","categories","toConsumableArray","Set","colorOptions","allCategories","Challenges_Category_Category","component","rest","objectWithoutProperties","react_router","assign","render","Leaderboard","teams","console","log","_this3","leaderboardContent","Table","Row","positive","Cell","score","celled","HeaderCell","Body","Dashboard","submissions","teamIndex","findIndex","t","rank","solvedChallenges","ind","submissionsContent","submission","textAlign","centered","Notifications","getNotifications","notificationsContent","Message","floating","date","text","jwt","currentTime","exp","App","es","components_Navbar_Navbar","exact","path","common_PrivateRoute","Boolean","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3913d0b6.chunk.js","sourcesContent":["const isEmpty = (value) => {\n    return (\n        value === undefined ||\n        value === null ||\n        (typeof value === 'object' && Object.keys(value).length === 0) ||\n        (typeof value === 'string' && value.trim().length === 0)\n    );\n}\n\nmodule.exports = isEmpty;","import axios from 'axios';\n\nconst setAuthToken = ( token ) => {\n    if(token) {\n        // Apply token to all requests\n        axios.defaults.headers.common['Authorization'] = token;\n    }else {\n        // Remove authorization token\n        delete axios.defaults.headers.common['Authorization'];\n    }\n}\n\nexport default setAuthToken;","import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\n\nimport { GET_ERRORS, SET_CURRENT_TEAM } from './types';\n\nexport const registerTeam = (team , history) => dispatch => {\n    axios.post('/api/teams/register' , team)\n        .then(team => {\n            history.push('/login');\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        })\n}\n\nexport const loginTeam = team => dispatch => {\n    axios.post('/api/teams/login' , team)\n        .then(res => {\n            // Get the token\n            const { token } = res.data;\n\n            // Store token in local storage\n            localStorage.setItem('jwt' , token);\n\n            // set auth token to headers\n            setAuthToken(token);\n\n            // decode token to get user data.\n            const teamData = jwt_decode(token);\n\n            // set current team\n            dispatch(setCurrentTeam(teamData));\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        })\n}\n\nexport const setCurrentTeam = teamData => {\n    return {\n        type: SET_CURRENT_TEAM,\n        payload: teamData\n    }\n}\n\nexport const logoutTeam = () => dispatch => {\n    // Remove token from local storage.\n    localStorage.removeItem('jwt');\n\n    // remove auth header\n    setAuthToken(false);\n\n    // remove current team from redux state\n    dispatch(setCurrentTeam({}));\n}\n","export const SET_CURRENT_TEAM = \"SET_CURRENT_TEAM\";\nexport const GET_ERRORS = \"GET_ERRORS\";\n\nexport const GET_CHALLENGES = \"GET_CHALLENGES\";\n\nexport const GET_NOTIFICATIONS = \"GET_NOTIFICATIONS\";\n\nexport const SET_GAME_SETTINGS = \"SET_GAME_SETTINGS\";\n","import { GET_ERRORS } from '../actions/types';\n\nconst initialState = {}\n\nexport default function(state = initialState , action) {\n    switch(action.type) {\n        case GET_ERRORS:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import { SET_CURRENT_TEAM } from \"../actions/types\";\nimport isEmpty from \"../validation/is-empty\";\n\nconst initialState = {\n  isAuthenticated: false,\n  team: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_TEAM:\n      return {\n        isAuthenticated: !isEmpty(action.payload),\n        team: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_CHALLENGES } from \"../actions/types\";\n\nconst initialState = {\n  challenge: {},\n  challenges: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_CHALLENGES:\n      return {\n        ...state,\n        challenges: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_NOTIFICATIONS } from \"../actions/types\";\n\nconst initialState = {\n  notifications: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_NOTIFICATIONS:\n      return {\n        ...state,\n        notifications: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_GAME_SETTINGS } from \"../actions/types\";\n\nconst initialState = {\n  settings: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_GAME_SETTINGS:\n      return {\n        settings: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport authReducer from \"./authReducer\";\nimport challengeReducer from \"./challengeReducer\";\nimport notificationReducer from \"./notificationReducer\";\nimport gameSettingReducer from \"./gameSettingReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  auth: authReducer,\n  challenge: challengeReducer,\n  notification: notificationReducer,\n  gameSetting: gameSettingReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/index\";\nconst initialState = {};\n\nconst middlewares = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middlewares),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./InertiaLogo.css\";\nconst InertiaLogo = props => {\n  return (\n    <div className=\"inertia-logo\">\n      <div className=\"container\">\n        <p>\n          <Link to=\"/\">> Inertia-CTF</Link>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default InertiaLogo;\n","import React, { Component } from \"react\";\nimport InertiaLogo from \"./InertiaLogo/InertiaLogo\";\nimport { Menu, Icon } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { logoutTeam } from \"../../actions/authAction\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Navbar.css\";\n\nclass Navbar extends Component {\n  state = {\n    activeItem: \"\"\n  };\n  componentDidMount() {\n    this.setState({\n      activeItem: window.location.href.split(\"/\")[\n        window.location.href.split(\"/\").length - 1\n      ]\n    });\n  }\n  onLogoutHandler = () => {\n    this.props.logoutTeam();\n  };\n  onMenuItemClick = (e, { name }) => {\n    this.setState({\n      activeItem: name\n    });\n  };\n  render() {\n    const { activeItem } = this.state;\n    let navigations = (\n      <Menu.Menu position=\"right\">\n        <Menu.Item\n          name=\"rules\"\n          active={activeItem === \"rules\"}\n          onClick={this.onMenuItemClick}\n          style={{\n            fontFamily: \"Iceland\",\n            fontSize: \"30px\",\n            padding: \"0px\",\n            margin: \"0px 15px 0px 15px\"\n          }}\n        >\n          <Link\n            to=\"/rules\"\n            style={{\n              color: \"green\"\n            }}\n          >\n            Rules\n          </Link>\n        </Menu.Item>\n\n        <Menu.Item\n          name=\"login\"\n          active={activeItem === \"login\"}\n          onClick={this.onMenuItemClick}\n          style={{\n            fontFamily: \"Iceland\",\n            fontSize: \"30px\",\n            padding: \"0px\",\n            margin: \"0px 15px 0px 15px\"\n          }}\n        >\n          <Link\n            to=\"/login\"\n            style={{\n              color: \"orange\"\n            }}\n          >\n            Login\n          </Link>\n        </Menu.Item>\n        <Menu.Item\n          name=\"register\"\n          active={activeItem === \"register\"}\n          onClick={this.onMenuItemClick}\n          style={{\n            fontFamily: \"Iceland\",\n            fontSize: \"30px\",\n            padding: \"0px\",\n            margin: \"0px 15px 0px 15px\"\n          }}\n        >\n          <Link\n            to=\"/register\"\n            style={{\n              color: \"orange\"\n            }}\n          >\n            Register\n          </Link>\n        </Menu.Item>\n      </Menu.Menu>\n    );\n\n    if (this.props.auth.isAuthenticated) {\n      navigations = (\n        <Menu.Menu position=\"right\">\n          <Menu.Item\n            name=\"dashboard\"\n            active={activeItem === \"dashboard\"}\n            onClick={this.onMenuItemClick}\n            style={{\n              fontFamily: \"Iceland\",\n              fontSize: \"30px\",\n              padding: \"0px\",\n              margin: \"0px 15px 0px 15px\"\n            }}\n          >\n            <Link\n              to=\"/dashboard\"\n              style={{\n                color: \"orange\"\n              }}\n            >\n              Dashboard\n            </Link>\n          </Menu.Item>\n          <Menu.Item\n            name=\"challenges\"\n            active={activeItem === \"challenges\"}\n            onClick={this.onMenuItemClick}\n            style={{\n              fontFamily: \"Iceland\",\n              fontSize: \"30px\",\n              padding: \"0px\",\n              margin: \"0px 15px 0px 15px\"\n            }}\n          >\n            <Link\n              to=\"/challenges\"\n              style={{\n                color: \"orange\"\n              }}\n            >\n              Challenges\n            </Link>\n          </Menu.Item>\n          <Menu.Item\n            name=\"leaderboard\"\n            active={activeItem === \"leaderboard\"}\n            onClick={this.onMenuItemClick}\n            style={{\n              fontFamily: \"Iceland\",\n              fontSize: \"30px\",\n              padding: \"0px\",\n              margin: \"0px 15px 0px 15px\"\n            }}\n          >\n            <Link\n              to=\"/leaderboard\"\n              style={{\n                color: \"orange\"\n              }}\n            >\n              Leaderboard\n            </Link>\n          </Menu.Item>\n          <Menu.Item\n            name=\"notification\"\n            active={activeItem === \"notification\"}\n            onClick={this.onMenuItemClick}\n            style={{\n              fontFamily: \"Iceland\",\n              fontSize: \"30px\",\n              padding: \"0px\",\n              margin: \"0px 0px 0px 0px\"\n            }}\n          >\n            <Link\n              to=\"/notifications\"\n              style={{\n                color: \"blue\"\n              }}\n            >\n              <Icon name=\"bell\" color=\"blue\" />\n            </Link>\n          </Menu.Item>\n          <Menu.Item\n            name=\"logout\"\n            active={activeItem === \"logout\"}\n            onClick={this.onLogoutHandler}\n            style={{\n              fontFamily: \"Iceland\",\n              fontSize: \"30px\",\n              padding: \"0px\",\n              margin: \"0px 0px 5px 15px\"\n            }}\n          >\n            <Icon name=\"sign-out\" color=\"red\" />\n          </Menu.Item>\n        </Menu.Menu>\n      );\n    }\n\n    return (\n      <div className=\"Navbar\">\n        <Menu pointing secondary>\n          <Menu.Menu position=\"left\">\n            <Menu.Item\n              name=\"home\"\n              onClick={this.onMenuItemClick}\n              style={{ padding: \"0px\" }}\n            >\n              <InertiaLogo />\n            </Menu.Item>\n          </Menu.Menu>\n          {navigations}\n        </Menu>\n      </div>\n    );\n  }\n}\n\nNavbar.propTypes = {\n  logoutTeam: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { logoutTeam }\n)(Navbar);\n","import axios from \"axios\";\nimport { GET_ERRORS, SET_GAME_SETTINGS } from \"./types\";\n\nexport const getGameSettings = () => dispatch => {\n  axios\n    .get(\"/api/gamesettings\")\n    .then(res => {\n      dispatch({\n        type: SET_GAME_SETTINGS,\n        payload: res.data\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n};\n","import React, { Component } from \"react\";\n\nimport Moment from \"react-moment\";\n\nimport { Container, Segment, Header } from \"semantic-ui-react\";\n\nclass Clock extends Component {\n  render() {\n    let { start, end } = this.props;\n    start = new Date(start);\n    end = new Date(end);\n    return (\n      <Container>\n        <Segment raised inverted padded color=\"\">\n          <Header as=\"h1\" style={{ fontFamily: \"Iceland\", fontSize: \"40px\" }}>\n            Starts: <Moment format=\"h:mm a\">{start}</Moment> on{\" \"}\n            <Moment format=\"MMMM DD, YYYY\">{start}</Moment>\n          </Header>\n\n          <Header as=\"h1\" style={{ fontFamily: \"Iceland\", fontSize: \"40px\" }}>\n            Ends: <Moment format=\"h:mm a\">{end}</Moment> on{\" \"}\n            <Moment format=\"MMMM DD, YYYY\">{end}</Moment>\n          </Header>\n        </Segment>\n      </Container>\n    );\n  }\n}\n\nexport default Clock;\n","import React, { Component } from \"react\";\nimport \"./Landing.css\";\nimport { Container, Header, Icon, Segment } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { getGameSettings } from \"../../actions/gameSettingAction\";\nimport Clock from \"../Clock/Clock\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    this.props.getGameSettings();\n  }\n  render() {\n    const { settings } = this.props.gameSetting;\n\n    return (\n      <Container fluid>\n        <Segment inverted>\n          <Header\n            as=\"h1\"\n            style={{\n              fontFamily: \"Iceland\",\n              fontSize: \"60px\",\n              margin: \"40px 0px 0px 0px\",\n              color: \"white\"\n            }}\n          >\n            <Icon name=\"flag outline\" color=\"green\" />\n            {settings.event}\n          </Header>\n          <Header\n            as=\"h1\"\n            style={{\n              fontFamily: \"Iceland\",\n              fontSize: \"40px\",\n              margin: \"0px\",\n              color: \"white\"\n            }}\n          >\n            {settings.organisation}\n          </Header>\n        </Segment>\n        <Clock start={settings.startTime} end={settings.endTime} />\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  gameSetting: state.gameSetting\n});\n\nexport default connect(\n  mapStateToProps,\n  { getGameSettings }\n)(Landing);\n","import React, { Component } from \"react\";\nimport { Button, Form, Segment } from \"semantic-ui-react\";\nimport { registerTeam } from \"../../actions/authAction\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport isEmpty from \"../../validation/is-empty\";\n\nimport \"./Register.css\";\n\nclass Register extends Component {\n  state = {\n    name: \"\",\n    handle: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    errors: {}\n  };\n\n  componentWillMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChangeHandler = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  onSubmitHandler = event => {\n    const newTeam = {\n      name: this.state.name,\n      handle: this.state.handle,\n      email: this.state.email,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword\n    };\n\n    this.props.registerTeam(newTeam, this.props.history);\n  };\n\n  render() {\n    const errors = this.state.errors;\n    return (\n      <Segment\n        raised\n        style={{\n          fontFamily: \"Iceland\",\n          margin: \"100px auto 0 auto\",\n          width: \"500px\",\n          borderRadius: \"10px\",\n          border: \"green\"\n        }}\n      >\n        <Form>\n          <h1>Register</h1>\n          <hr />\n          <label>Team Name</label>\n          <br />\n          {isEmpty(errors.name) ? null : <span>{errors.name}</span>}\n          <Form.Input\n            fluid\n            style={{\n              fontFamily: \"Iceland\",\n              fontSize: \"15px\"\n            }}\n            placeholder=\"Team name\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.onChangeHandler}\n            error={!isEmpty(errors.name)}\n          />\n          <label>Team Handle</label>\n          <br />\n          {isEmpty(errors.handle) ? null : <span>{errors.handle}</span>}\n          <Form.Input\n            fluid\n            style={{\n              fontFamily: \"Iceland\",\n              fontSize: \"15px\"\n            }}\n            placeholder=\"Team handle\"\n            name=\"handle\"\n            value={this.state.handle}\n            onChange={this.onChangeHandler}\n            error={!isEmpty(errors.handle)}\n          />\n          <label>E-mail</label>\n          <br />\n          {isEmpty(errors.email) ? null : <span>{errors.email}</span>}\n          <Form.Input\n            fluid\n            style={{\n              fontFamily: \"Iceland\",\n              fontSize: \"15px\"\n            }}\n            placeholder=\"E-mail\"\n            name=\"email\"\n            value={this.state.email}\n            onChange={this.onChangeHandler}\n            error={!isEmpty(errors.email)}\n          />\n          <label>Password</label>\n          <br />\n          {isEmpty(errors.password) ? null : <span>{errors.password}</span>}\n          <Form.Input\n            fluid\n            style={{\n              fontFamily: \"Iceland\",\n              fontSize: \"15px\"\n            }}\n            placeholder=\"Password\"\n            name=\"password\"\n            type=\"password\"\n            value={this.state.password}\n            onChange={this.onChangeHandler}\n            error={!isEmpty(errors.password)}\n          />\n          <label>Confirm Password</label>\n          <br />\n          {isEmpty(errors.confirmPassword) ? null : (\n            <span>{errors.confirmPassword}</span>\n          )}\n          <Form.Input\n            fluid\n            style={{\n              fontFamily: \"Iceland\",\n              fontSize: \"15px\"\n            }}\n            placeholder=\"Confirm Password\"\n            name=\"confirmPassword\"\n            type=\"password\"\n            value={this.state.confirmPassword}\n            onChange={this.onChangeHandler}\n            error={!isEmpty(errors.confirmPassword)}\n          />\n          <Button\n            inverted\n            color=\"green\"\n            type=\"submit\"\n            style={{\n              fontFamily: \"Iceland\",\n              fontSize: \"25px\",\n              padding: \"10px\",\n              width: \"100%\",\n              margin: \"10px 0px 0px 0px\"\n            }}\n            onClick={this.onSubmitHandler}\n          >\n            Submit\n          </Button>\n        </Form>\n      </Segment>\n    );\n  }\n}\n\nRegister.propTypes = {\n  registerTeam: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { registerTeam }\n)(Register);\n","import React, { Component } from \"react\";\nimport { Button, Form, Segment } from \"semantic-ui-react\";\nimport isEmpty from \"../../validation/is-empty\";\nimport { connect } from \"react-redux\";\nimport { loginTeam } from \"../../actions/authAction\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Login.css\";\n\nclass Login extends Component {\n  state = {\n    handle: \"\",\n    password: \"\",\n    errors: {}\n  };\n\n  componentWillMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChangeHandler = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  onSubmitHandler = event => {\n    const teamData = {\n      handle: this.state.handle,\n      password: this.state.password\n    };\n    this.props.loginTeam(teamData);\n  };\n\n  render() {\n    const errors = this.state.errors;\n\n    return (\n      <Segment\n        raised\n        style={{\n          fontFamily: \"Iceland\",\n          margin: \"100px auto 0 auto\",\n          width: \"500px\",\n          borderRadius: \"10px\",\n          border: \"green\"\n        }}\n      >\n        <Form>\n          <h1>Login</h1>\n          <hr />\n          <label>Team Handle</label>\n          <br />\n          {isEmpty(errors.handle) ? null : <span>{errors.handle}</span>}\n          <Form.Input\n            fluid\n            style={{\n              fontFamily: \"Iceland\",\n              fontSize: \"15px\"\n            }}\n            placeholder=\"Team handle\"\n            name=\"handle\"\n            value={this.state.handle}\n            onChange={this.onChangeHandler}\n            error={!isEmpty(errors.handle)}\n          />\n          <label>Password</label>\n          <br />\n          {isEmpty(errors.password) ? null : <span>{errors.password}</span>}\n          <Form.Input\n            fluid\n            style={{\n              fontFamily: \"Iceland\",\n              fontSize: \"15px\"\n            }}\n            placeholder=\"Password\"\n            name=\"password\"\n            value={this.state.password}\n            type=\"password\"\n            onChange={this.onChangeHandler}\n            error={!isEmpty(errors.password)}\n          />\n          <Button\n            inverted\n            color=\"green\"\n            type=\"submit\"\n            style={{\n              fontFamily: \"Iceland\",\n              fontSize: \"25px\",\n              padding: \"10px\",\n              width: \"100%\",\n              margin: \"10px 0px 0px 0px\"\n            }}\n            onClick={this.onSubmitHandler}\n          >\n            Submit\n          </Button>\n        </Form>\n      </Segment>\n    );\n  }\n}\n\nLogin.propTypes = {\n  loginTeam: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { loginTeam }\n)(Login);\n","import axios from \"axios\";\nimport { GET_CHALLENGES, GET_ERRORS } from \"./types\";\n\n// Get all challenges\nexport const getChallenges = () => dispatch => {\n  axios\n    .get(\"/api/challenges\")\n    .then(res => {\n      dispatch({\n        type: GET_CHALLENGES,\n        payload: res.data\n      });\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n","import React, { Component } from \"react\";\nimport { Card, Input, Icon, Label } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport isEmpty from \"../../../../validation/is-empty\";\n\nimport \"./Challenge.css\";\n\nclass Challenge extends Component {\n  state = {\n    show: false,\n    flag: \"\",\n    errors: {},\n    solved: false\n  };\n  componentDidMount() {\n    this.setState({\n      solved:\n        this.props.challenge.solvedBy.filter(\n          team => team._id.toString() === this.props.auth.team.id.toString()\n        ).length > 0\n    });\n  }\n  onChangeHandler = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n  onFlagSubmit = () => {\n    axios\n      .post(`/api/submissions/submit/${this.props.challenge._id}`, {\n        flag: this.state.flag\n      })\n      .then(res => {\n        if (res.data.verdict === \"Wrong\") {\n          this.setState({\n            errors: { verdict: res.data.verdict }\n          });\n        } else {\n          if (res.data.verdict === \"Correct\") {\n            this.props.getChallenges();\n          }\n          this.setState({\n            errors: { verdict: res.data.verdict },\n            solved: true\n          });\n        }\n      })\n      .catch(err => {\n        this.setState({\n          errors: err.response.data\n        });\n      });\n  };\n\n  onClick = () => {\n    this.setState({\n      show: !this.state.show,\n      flag: \"\",\n      errors: {}\n    });\n  };\n  render() {\n    const { name, value, description } = this.props.challenge;\n    const { errors } = this.state;\n    let errorLabel;\n    let solved_input = true;\n\n    if (isEmpty(errors)) {\n      errorLabel = null;\n    } else {\n      if (isEmpty(errors.verdict)) {\n        solved_input = false;\n        errorLabel = (\n          <Label basic color=\"red\" size=\"large\" pointing>\n            {errors.flag}\n          </Label>\n        );\n      } else {\n        if (errors.verdict === \"Wrong\") {\n          solved_input = false;\n          errorLabel = (\n            <Label basic color=\"red\" size=\"large\" pointing>\n              Ooopss. Incorrect\n            </Label>\n          );\n        } else {\n          errorLabel = (\n            <Label basic color=\"green\" size=\"large\" pointing>\n              Correct Answer\n            </Label>\n          );\n        }\n      }\n    }\n\n    return (\n      <Card\n        raised\n        inverted\n        fluid={this.state.show}\n        style={{\n          fontFamily: \"Iceland\",\n          fontSize: \"15px\",\n          borderRadius: \"25px\"\n          // backgroundColor: this.state.solved ? \"#E8F5E9\" : \"white\",\n          // textAlign: \"center\"\n        }}\n        size=\"big\"\n        color={this.props.color}\n        link\n      >\n        <Card.Content onClick={this.onClick}>\n          <Card.Header>\n            {name}\n            {this.state.solved ? (\n              <Icon name=\"check circle outline\" color=\"green\" />\n            ) : null}\n          </Card.Header>\n          <Card.Meta style={{ fontSize: \"30px\" }}>{`${value}`}</Card.Meta>\n          {/* {this.state.show ? (\n            <Card.Description>{description}</Card.Description>\n          ) : null} */}\n        </Card.Content>\n        {this.state.show ? (\n          <Card.Content extra>\n            <Card.Description style={{ fontSize: \"20px\" }}>\n              {description}\n            </Card.Description>\n            <Input\n              style={{\n                margin: \"20px 0px 0px 0px\"\n              }}\n              size=\"medium\"\n              icon={\n                <Icon\n                  inverted\n                  color=\"green\"\n                  circular\n                  link\n                  name=\"send\"\n                  onClick={this.onFlagSubmit}\n                />\n              }\n              error={!solved_input}\n              fluid\n              placeholder=\"Enter the Flag\"\n              name=\"flag\"\n              value={this.state.flag}\n              onChange={this.onChangeHandler}\n            />\n            {errorLabel}\n          </Card.Content>\n        ) : null}\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(Challenge);\n","import React, { Component } from \"react\";\nimport { Container, Header, Card, Label } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { getChallenges } from \"../../../actions/challengeAction\";\n\nimport \"./Category.css\";\nimport Challenge from \"./Challenge/Challenge\";\nclass Category extends Component {\n  state = {\n    show: false\n  };\n  onClickShow = () => {\n    this.setState({\n      show: !this.state.show\n    });\n  };\n  render() {\n    const challenges = this.props.challenges.map((challenge, index) => (\n      <Challenge\n        color={this.props.color}\n        key={index}\n        challenge={challenge}\n        getChallenges={this.props.getChallenges}\n      />\n    ));\n\n    let solved = this.props.challenges.filter(\n      challenge =>\n        challenge.solvedBy.filter(\n          team => team._id.toString() === this.props.auth.team.id.toString()\n        ).length > 0\n    ).length;\n    const total = this.props.challenges.length;\n\n    return (\n      <div className=\"category\">\n        <Container>\n          <Header\n            onClick={this.onClickShow}\n            as=\"h2\"\n            color={this.props.color}\n            style={{\n              fontFamily: \"Iceland\",\n              fontSize: \"3em\"\n            }}\n          >\n            {this.props.category.toUpperCase()}\n            <Label\n              pointing=\"left\"\n              // circular\n              style={{ fontSize: \"20px\", padding: \"8px\", margin: \"5px 20px\" }}\n              basic\n              color={solved === total ? \"green\" : \"red\"}\n            >{`Solved: ${solved}/${total}`}</Label>\n          </Header>\n          {this.state.show ? <Card.Group>{challenges}</Card.Group> : null}\n        </Container>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(\n  mapStateToProps,\n  { getChallenges }\n)(Category);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getChallenges } from \"../../actions/challengeAction\";\nimport \"./Challenges.css\";\nimport Category from \"./Category/Category\";\nimport { Container, Segment, Header } from \"semantic-ui-react\";\nimport { getGameSettings } from \"../../actions/gameSettingAction\";\nclass Challenges extends Component {\n  componentDidMount() {\n    this.props.getGameSettings();\n    this.props.getChallenges();\n  }\n  render() {\n    let contestRunning = false;\n\n    if (this.props.gameSetting.settings.startTime) {\n      const start = new Date(this.props.gameSetting.settings.startTime);\n      const end = new Date(this.props.gameSetting.settings.endTime);\n      const current = new Date(Date.now());\n      contestRunning = current >= start && current <= end;\n    }\n\n    if (!contestRunning) {\n      return (\n        <Container fluid>\n          <Segment inverted>\n            <Header as=\"h1\"> Contest is over </Header>\n          </Segment>\n        </Container>\n      );\n    }\n    const { challenge } = this.props;\n    const { challenges } = challenge;\n\n    const categories = [\n      ...new Set(challenges.map(challenge => challenge.category))\n    ];\n    const colorOptions = [\n      \"red\",\n      \"orange\",\n      \"olive\",\n      \"green\",\n      \"teal\",\n      \"blue\",\n      \"violet\",\n      \"purple\",\n      \"pink\",\n      \"brown\"\n    ];\n    const allCategories = categories.map((category, index) => {\n      return (\n        <Segment\n          key={index}\n          raised\n          style={{\n            borderRadius: \"25px\"\n          }}\n        >\n          <Category\n            color={colorOptions[index % colorOptions.length]}\n            category={category}\n            challenges={challenges.filter(\n              challenge => challenge.category === category\n            )}\n          />\n        </Segment>\n      );\n    });\n\n    return (\n      <div className=\"challenges\" style={{ margin: \"20px 0px 0px 0px\" }}>\n        <Container>{allCategories}</Container>\n      </div>\n    );\n  }\n}\n\nChallenges.propTypes = {\n  getChallenges: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  challenge: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  challenge: state.challenge,\n  gameSetting: state.gameSetting\n});\n\nexport default connect(\n  mapStateToProps,\n  { getChallenges, getGameSettings }\n)(Challenges);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        auth.isAuthenticated === true ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/\" />\n        )\n      }\n    />\n  );\n};\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(PrivateRoute);\n","import React, { Component } from \"react\";\nimport { Table, Container } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\n\nclass Leaderboard extends Component {\n  state = {\n    teams: []\n  };\n  componentDidMount() {\n    axios\n      .get(\"/api/teams/leaderboard\")\n      .then(res => {\n        this.setState({\n          teams: res.data\n        });\n      })\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    const { teams } = this.state;\n\n    const leaderboardContent = teams.map((team, index) => (\n      <Table.Row key={index} positive={team._id === this.props.auth.team.id}>\n        <Table.Cell>{index + 1}</Table.Cell>\n        <Table.Cell>{team.name}</Table.Cell>\n        <Table.Cell>{team.handle}</Table.Cell>\n        <Table.Cell>{team.score}</Table.Cell>\n      </Table.Row>\n    ));\n\n    return (\n      <Container\n        style={{\n          margin: \"20px auto\"\n        }}\n      >\n        <Table color=\"teal\" padded celled>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Rank</Table.HeaderCell>\n              <Table.HeaderCell>Team Name</Table.HeaderCell>\n              <Table.HeaderCell>Handle</Table.HeaderCell>\n              <Table.HeaderCell>Score</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>{leaderboardContent}</Table.Body>\n        </Table>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(Leaderboard);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getChallenges } from \"../../actions/challengeAction\";\nimport \"./Dashboard.css\";\nimport {\n  Segment,\n  Header,\n  Container,\n  Item,\n  Label,\n  Table\n} from \"semantic-ui-react\";\nimport axios from \"axios\";\n\nclass Dashboard extends Component {\n  state = {\n    teams: [],\n    submissions: []\n  };\n  componentDidMount() {\n    this.props.getChallenges();\n    axios\n      .get(\"/api/teams/leaderboard\")\n      .then(res => {\n        this.setState({\n          teams: res.data\n        });\n      })\n      .catch(err => console.log(err));\n    axios\n      .get(\"/api/submissions/\")\n      .then(res => {\n        this.setState({\n          submissions: res.data\n        });\n      })\n      .catch(err => console.log(err));\n  }\n  render() {\n    const { team } = this.props.auth;\n    const { challenges } = this.props.challenge;\n    const { teams } = this.state;\n    const teamIndex = teams.findIndex(t => t._id === team.id);\n    let score = 0,\n      rank = 0;\n    if (teamIndex >= 0) {\n      score = teams[teamIndex].score;\n      rank = teamIndex + 1;\n    }\n    const colorOptions = [\n      \"red\",\n      \"orange\",\n      \"olive\",\n      \"green\",\n      \"teal\",\n      \"blue\",\n      \"violet\",\n      \"purple\",\n      \"pink\",\n      \"brown\"\n    ];\n    const categories = [\n      ...new Set(challenges.map(challenge => challenge.category))\n    ];\n    const solvedChallenges = categories.map((category, index) => (\n      <Item key={index}>\n        <Item.Content>\n          <Item.Header\n            style={{\n              color: colorOptions[index % colorOptions.length],\n              fontSize: \"25px\"\n            }}\n          >\n            {category.toUpperCase()}\n          </Item.Header>\n          <Item.Description>\n            {challenges\n              .filter(challenge => challenge.category === category)\n              .filter(\n                challenge =>\n                  challenge.solvedBy.filter(t => t._id === team.id).length > 0\n              )\n              .map((challenge, ind) => (\n                <Label\n                  key={ind}\n                  color=\"grey\"\n                  size=\"large\"\n                  style={{ margin: \"5px\" }}\n                >\n                  {challenge.name}\n                </Label>\n              ))}\n          </Item.Description>\n        </Item.Content>\n      </Item>\n    ));\n\n    const submissionsContent = this.state.submissions.map(\n      (submission, index) => (\n        <Table.Row positive={submission.verdict === \"Correct\"}>\n          <Table.Cell>{index + 1}</Table.Cell>\n          <Table.Cell>{submission.challenge.name}</Table.Cell>\n          <Table.Cell>{submission.verdict}</Table.Cell>\n          <Table.Cell>{submission.flag}</Table.Cell>\n          {/* <Table.Cell>{submission.date}</Table.Cell> */}\n        </Table.Row>\n      )\n    );\n\n    return (\n      <div className=\"dashboard\">\n        <Segment\n          style={{ margin: \"0px\", fontFamily: \"Iceland\" }}\n          textAlign=\"center\"\n          inverted\n          padded\n        >\n          <Header\n            as=\"h1\"\n            style={{\n              fontSize: \"50px\",\n              fontFamily: \"Iceland\",\n              padding: \"0px\",\n              margin: \"10px\"\n            }}\n          >\n            {team.name}\n          </Header>\n          <Header\n            as=\"h3\"\n            style={{\n              fontSize: \"25px\",\n              fontFamily: \"Iceland\",\n              padding: \"0px\",\n              margin: \"10px\"\n            }}\n          >\n            @{team.handle}\n          </Header>\n          <Header\n            as=\"h2\"\n            style={{\n              fontSize: \"40px\",\n              fontFamily: \"Iceland\",\n              padding: \"0px\",\n              margin: \"10px\"\n            }}\n          >\n            Score: {score}\n          </Header>\n          <Header\n            as=\"h2\"\n            style={{\n              fontSize: \"40px\",\n              fontFamily: \"Iceland\",\n              padding: \"0px\",\n              margin: \"10px\"\n            }}\n          >\n            Rank: {rank}\n          </Header>\n        </Segment>\n        <Container>\n          <Segment raised padded style={{ margin: \"10px auto\" }}>\n            <Header as=\"h1\" centered>\n              Solved\n            </Header>\n            <hr />\n            <Item.Group>{solvedChallenges}</Item.Group>\n          </Segment>\n        </Container>\n        <Container>\n          <Segment raised padded style={{ margin: \"10px auto\" }}>\n            <Header as=\"h1\" centered>\n              Submissions\n            </Header>\n            <hr />\n\n            <Table color=\"teal\" padded celled>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell width={2}>S. No.</Table.HeaderCell>\n                  <Table.HeaderCell>Challenge</Table.HeaderCell>\n                  <Table.HeaderCell>Verdict</Table.HeaderCell>\n                  <Table.HeaderCell>Flag</Table.HeaderCell>\n                  {/* <Table.HeaderCell>Timestamp</Table.HeaderCell> */}\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>{submissionsContent}</Table.Body>\n            </Table>\n          </Segment>\n        </Container>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  challenge: state.challenge\n});\nexport default connect(\n  mapStateToProps,\n  { getChallenges }\n)(Dashboard);\n","import React, { Component } from \"react\";\nimport { Segment, Header, Message, Container } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { getNotifications } from \"../../actions/notificationsAction\";\nimport Moment from \"react-moment\";\n\nclass Notifications extends Component {\n  componentDidMount() {\n    this.props.getNotifications();\n  }\n\n  render() {\n    const { notifications } = this.props.notification;\n    const notificationsContent = notifications.map((notification, index) => (\n      <Message\n        key={index}\n        floating\n        style={{ margin: \"10px 0px\", fontFamily: \"Iceland\", fontSize: \"20px\" }}\n      >\n        <Message.Header>\n          <Moment format=\"h:mm a, MMMM DD\">{notification.date}</Moment>\n        </Message.Header>\n        <p style={{ fontSize: \"30px\" }}>{notification.text}</p>\n      </Message>\n    ));\n    return (\n      <div>\n        <Segment\n          style={{ margin: \"0px\", fontFamily: \"Iceland\" }}\n          textAlign=\"center\"\n          inverted\n          padded\n        >\n          <Header\n            as=\"h1\"\n            style={{\n              fontSize: \"50px\",\n              fontFamily: \"Iceland\",\n              padding: \"0px\",\n              margin: \"10px\"\n            }}\n          >\n            Notifications\n          </Header>\n        </Segment>\n        <Container>{notificationsContent}</Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  notification: state.notification\n});\n\nexport default connect(\n  mapStateToProps,\n  { getNotifications }\n)(Notifications);\n","import axios from \"axios\";\nimport { GET_NOTIFICATIONS, GET_ERRORS } from \"./types\";\n\nexport const getNotifications = () => dispatch => {\n  axios\n    .get(\"/api/notifications\")\n    .then(res => {\n      dispatch({\n        type: GET_NOTIFICATIONS,\n        payload: res.data\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n};\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { logoutTeam, setCurrentTeam } from \"./actions/authAction\";\n\nimport \"./App.css\";\nimport store from \"./store\";\n\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Landing from \"./components/Landing/Landing\";\nimport Register from \"./components/Register/Register\";\nimport Login from \"./components/Login/Login\";\nimport Challenges from \"./components/Challenges/Challenges\";\nimport PrivateRoute from \"./components/common/PrivateRoute\";\nimport Leaderboard from \"./components/Leaderboard/Leaderboard\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\nimport Notifications from \"./components/Notifications/Notifications\";\n\nif (localStorage.jwt) {\n  // Set auth header\n  setAuthToken(localStorage.jwt);\n\n  // Decode token\n  const teamData = jwt_decode(localStorage.jwt);\n\n  // Set current team in redux store\n  store.dispatch(setCurrentTeam(teamData));\n\n  const currentTime = Date.now() / 1000;\n  if (teamData.exp < currentTime) {\n    // Logut Team\n    store.dispatch(logoutTeam());\n\n    // Delete token\n    window.location.href = \"/login\";\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Navbar />\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/register\" component={Register} />\n          <Switch>\n            <PrivateRoute exact path=\"/challenges\" component={Challenges} />\n          </Switch>\n          <Switch>\n            <PrivateRoute exact path=\"/leaderboard\" component={Leaderboard} />\n          </Switch>\n          <Switch>\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n          </Switch>\n          <Switch>\n            <PrivateRoute\n              exact\n              path=\"/notifications\"\n              component={Notifications}\n            />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}