{"version":3,"sources":["validation/is-empty.js","utils/setAuthToken.js","actions/authAction.js","actions/types.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/challengeReducer.js","reducers/notificationReducer.js","reducers/gameSettingReducer.js","reducers/index.js","store.js","components/Navbar/InertiaLogo/InertiaLogo.js","components/Navbar/Navbar.js","actions/gameSettingAction.js","components/Clock/Clock.js","components/Landing/Landing.js","components/Register/Register.js","components/Login/Login.js","actions/challengeAction.js","hoc/Aux.js","components/Challenges/Category/Challenge/Challenge.js","components/Challenges/Category/Category.js","components/Challenges/Challenges.js","components/common/PrivateRoute.js","components/Leaderboard/Leaderboard.js","components/Dashboard/Dashboard.js","actions/notificationsAction.js","components/Notifications/Notifications.js","components/common/AdminRoute.js","components/Admin/Statistics.js","components/Admin/Notifications.js","components/Admin/Challenges.js","components/Admin/Config.js","components/Admin/Teams.js","components/Admin/Submissions.js","components/Admin/Admin.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","value","undefined","Object","keys","length","trim","setAuthToken","token","axios","defaults","headers","common","setCurrentTeam","teamData","type","payload","logoutTeam","dispatch","localStorage","removeItem","initialState","isAuthenticated","team","challenge","challenges","isLoading","notifications","settings","loading","combineReducers","errors","state","arguments","action","auth","isEmpty","objectSpread","notification","gameSetting","middlewares","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","InertiaLogo","props","react_default","a","createElement","className","react_router_dom","to","Navbar","activeItem","onLogoutHandler","_this","onMenuItemClick","e","_ref","name","setState","this","window","location","href","split","navigations","Menu","position","Item","active","onClick","style","fontFamily","fontSize","padding","margin","color","handle","Icon","pointing","secondary","Navbar_InertiaLogo_InertiaLogo","Component","connect","getGameSettings","get","then","res","data","catch","err","response","setLoading","Clock","_this$props","start","end","Date","Container","Segment","raised","inverted","padded","Header","as","dist_default","format","Landing","fluid","event","organisation","components_Clock_Clock","startTime","endTime","Register","email","password","confirmPassword","onChangeHandler","defineProperty","target","onSubmitHandler","newTeam","registerTeam","history","push","nextProps","width","borderRadius","border","Form","Input","placeholder","onChange","error","Button","post","Login","loginTeam","setItem","jwt_decode","getChallenges","Aux","children","Challenge","show","flag","solved","onFlagSubmit","concat","_id","verdict","_this2","solvedBy","filter","toString","id","errorLabel","_this$props$challenge","description","solved_input","Label","basic","size","solvedByContent","map","Card","link","Content","Meta","hoc_Aux","extra","Description","icon","circular","Category","onClickShow","index","Category_Challenge_Challenge","key","total","category","toUpperCase","Group","Challenges","contestRunning","Dimmer","Loader","now","categories","toConsumableArray","Set","colorOptions","allCategories","Challenges_Category_Category","component","rest","objectWithoutProperties","react_router","assign","render","Leaderboard","teams","console","log","_this3","leaderboardContent","Table","Row","positive","Cell","score","celled","HeaderCell","Body","Dashboard","submissions","teamIndex","findIndex","t","rank","solvedChallenges","ind","submissionsContent","submission","textAlign","getNotifications","Notifications","notificationsContent","Message","floating","date","text","Statistics","modalOpen","modalText","modalAddLoading","onDeleteClick","delete","modalOpenHandler","modalOnChangeHandler","addNewNotification","modalTextError","Modal","trigger","Popup","content","open","onClose","TextArea","rows","modalLoading","newChallenge","modalCloseHandler","challengeData","put","challengeContent","Config","componentWillReceiveProps","next","onDateChangeHandler","saveChangesHandler","newConfig","moment","setGameSettings","commonjs","iconPosition","closeOnMouseLeave","clearable","closable","dateFormat","clearIcon","Teams","Submissions","page","correctOnly","onPageChange","activePage","onCorrectToggle","totalPages","Math","floor","slice","backgroundColor","Grid","Column","Checkbox","checked","slider","Pagination","defaultActivePage","ellipsisItem","firstItem","lastItem","prevItem","nextItem","Admin","activeItemContent","Admin_Challenges","contents","statistics","Admin_Statistics","Admin_Notifications","config","Admin_Config","Admin_Teams","Admin_Submissions","handleItemClick","vertical","jwt","currentTime","exp","App","es","components_Navbar_Navbar","exact","path","common_PrivateRoute","common_AdminRoute","Boolean","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.499f1045.chunk.js","sourcesContent":["const isEmpty = (value) => {\n    return (\n        value === undefined ||\n        value === null ||\n        (typeof value === 'object' && Object.keys(value).length === 0) ||\n        (typeof value === 'string' && value.trim().length === 0)\n    );\n}\n\nmodule.exports = isEmpty;","import axios from 'axios';\n\nconst setAuthToken = ( token ) => {\n    if(token) {\n        // Apply token to all requests\n        axios.defaults.headers.common['Authorization'] = token;\n    }else {\n        // Remove authorization token\n        delete axios.defaults.headers.common['Authorization'];\n    }\n}\n\nexport default setAuthToken;","import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\n\nimport { GET_ERRORS, SET_CURRENT_TEAM } from './types';\n\nexport const registerTeam = (team , history) => dispatch => {\n    axios.post('/api/teams/register' , team)\n        .then(team => {\n            history.push('/login');\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        })\n}\n\nexport const loginTeam = team => dispatch => {\n    axios.post('/api/teams/login' , team)\n        .then(res => {\n            // Get the token\n            const { token } = res.data;\n\n            // Store token in local storage\n            localStorage.setItem('jwt' , token);\n\n            // set auth token to headers\n            setAuthToken(token);\n\n            // decode token to get user data.\n            const teamData = jwt_decode(token);\n\n            // set current team\n            dispatch(setCurrentTeam(teamData));\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        })\n}\n\nexport const setCurrentTeam = teamData => {\n    return {\n        type: SET_CURRENT_TEAM,\n        payload: teamData\n    }\n}\n\nexport const logoutTeam = () => dispatch => {\n    // Remove token from local storage.\n    localStorage.removeItem('jwt');\n\n    // remove auth header\n    setAuthToken(false);\n\n    // remove current team from redux state\n    dispatch(setCurrentTeam({}));\n}\n","export const SET_CURRENT_TEAM = \"SET_CURRENT_TEAM\";\nexport const GET_ERRORS = \"GET_ERRORS\";\n\nexport const GET_CHALLENGES = \"GET_CHALLENGES\";\nexport const SET_LOADING_CHALLENGES = \"SET_LOADING_CHALLENGES\";\n\nexport const GET_NOTIFICATIONS = \"GET_NOTIFICATIONS\";\nexport const SET_LOADING_NOTIFICATIONS = \"SET_LOADING_NOTIFICATIONS\";\n\nexport const SET_GAME_SETTINGS = \"SET_GAME_SETTINGS\";\nexport const SET_GAME_SETTINGS_LOADING = \"SET_GAME_SETTINGS_LOADING\";\nexport const UNSET_GAME_SETTINGS_LOADING = \"UNSET_GAME_SETTINGS_LOADING\";\n","import { GET_ERRORS } from '../actions/types';\n\nconst initialState = {}\n\nexport default function(state = initialState , action) {\n    switch(action.type) {\n        case GET_ERRORS:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import { SET_CURRENT_TEAM } from \"../actions/types\";\nimport isEmpty from \"../validation/is-empty\";\n\nconst initialState = {\n  isAuthenticated: false,\n  team: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_TEAM:\n      return {\n        isAuthenticated: !isEmpty(action.payload),\n        team: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_CHALLENGES, SET_LOADING_CHALLENGES } from \"../actions/types\";\n\nconst initialState = {\n  challenge: {},\n  challenges: [],\n  isLoading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_LOADING_CHALLENGES:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case GET_CHALLENGES:\n      return {\n        ...state,\n        challenges: action.payload,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_NOTIFICATIONS, SET_LOADING_NOTIFICATIONS } from \"../actions/types\";\n\nconst initialState = {\n  notifications: [],\n  isLoading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_LOADING_NOTIFICATIONS:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case GET_NOTIFICATIONS:\n      return {\n        ...state,\n        notifications: action.payload,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  SET_GAME_SETTINGS,\n  SET_GAME_SETTINGS_LOADING,\n  UNSET_GAME_SETTINGS_LOADING\n} from \"../actions/types\";\n\nconst initialState = {\n  settings: {},\n  loading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_GAME_SETTINGS:\n      return {\n        settings: action.payload,\n        loading: false\n      };\n    case SET_GAME_SETTINGS_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    case UNSET_GAME_SETTINGS_LOADING:\n      return {\n        ...state,\n        loading: false\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport authReducer from \"./authReducer\";\nimport challengeReducer from \"./challengeReducer\";\nimport notificationReducer from \"./notificationReducer\";\nimport gameSettingReducer from \"./gameSettingReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  auth: authReducer,\n  challenge: challengeReducer,\n  notification: notificationReducer,\n  gameSetting: gameSettingReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/index\";\nconst initialState = {};\n\nconst middlewares = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middlewares)\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./InertiaLogo.css\";\nconst InertiaLogo = props => {\n  return (\n    <div className=\"inertia-logo\">\n      <div className=\"container\">\n        <p>\n          <Link to=\"/\">> Inertia-CTF</Link>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default InertiaLogo;\n","import React, { Component } from \"react\";\nimport InertiaLogo from \"./InertiaLogo/InertiaLogo\";\nimport { Menu, Icon } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { logoutTeam } from \"../../actions/authAction\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Navbar.css\";\n\nclass Navbar extends Component {\n  state = {\n    activeItem: \"\"\n  };\n  componentDidMount() {\n    this.setState({\n      activeItem: window.location.href.split(\"/\")[\n        window.location.href.split(\"/\").length - 1\n      ]\n    });\n  }\n  onLogoutHandler = () => {\n    this.props.logoutTeam();\n  };\n  onMenuItemClick = (e, { name }) => {\n    this.setState({\n      activeItem: name\n    });\n  };\n  render() {\n    const { activeItem } = this.state;\n    let navigations = (\n      <Menu.Menu position=\"right\">\n        <Menu.Item\n          name=\"rules\"\n          active={activeItem === \"rules\"}\n          onClick={this.onMenuItemClick}\n          style={{\n            fontFamily: \"Iceland\",\n            fontSize: \"25px\",\n            padding: \"0px\",\n            margin: \"0px 15px 0px 15px\"\n          }}\n        >\n          <Link\n            to=\"/rules\"\n            style={{\n              color: \"green\"\n            }}\n          >\n            Rules\n          </Link>\n        </Menu.Item>\n\n        <Menu.Item\n          name=\"login\"\n          active={activeItem === \"login\"}\n          onClick={this.onMenuItemClick}\n          style={{\n            fontFamily: \"Iceland\",\n            fontSize: \"25px\",\n            padding: \"0px\",\n            margin: \"0px 15px 0px 15px\"\n          }}\n        >\n          <Link\n            to=\"/login\"\n            style={{\n              color: \"orange\"\n            }}\n          >\n            Login\n          </Link>\n        </Menu.Item>\n        <Menu.Item\n          name=\"register\"\n          active={activeItem === \"register\"}\n          onClick={this.onMenuItemClick}\n          style={{\n            fontFamily: \"Iceland\",\n            fontSize: \"25px\",\n            padding: \"0px\",\n            margin: \"0px 15px 0px 15px\"\n          }}\n        >\n          <Link\n            to=\"/register\"\n            style={{\n              color: \"orange\"\n            }}\n          >\n            Register\n          </Link>\n        </Menu.Item>\n      </Menu.Menu>\n    );\n\n    if (this.props.auth.isAuthenticated) {\n      navigations = (\n        <Menu.Menu position=\"right\">\n          {this.props.auth.team.handle === \"admin\" ? (\n            <Menu.Item\n              name=\"admin\"\n              active={activeItem === \"admin\"}\n              onClick={this.onMenuItemClick}\n              style={{\n                fontFamily: \"Iceland\",\n                fontSize: \"25px\",\n                padding: \"0px\",\n                margin: \"0px 15px 0px 15px\"\n              }}\n            >\n              <Link\n                to=\"/admin\"\n                style={{\n                  color: \"#43A047\"\n                }}\n              >\n                Admin\n              </Link>\n            </Menu.Item>\n          ) : null}\n          <Menu.Item\n            name=\"dashboard\"\n            active={activeItem === \"dashboard\"}\n            onClick={this.onMenuItemClick}\n            style={{\n              fontFamily: \"Iceland\",\n              fontSize: \"25px\",\n              padding: \"0px\",\n              margin: \"0px 15px 0px 15px\"\n            }}\n          >\n            <Link\n              to=\"/dashboard\"\n              style={{\n                color: \"orange\"\n              }}\n            >\n              Dashboard\n            </Link>\n          </Menu.Item>\n          <Menu.Item\n            name=\"challenges\"\n            active={activeItem === \"challenges\"}\n            onClick={this.onMenuItemClick}\n            style={{\n              fontFamily: \"Iceland\",\n              fontSize: \"25px\",\n              padding: \"0px\",\n              margin: \"0px 15px 0px 15px\"\n            }}\n          >\n            <Link\n              to=\"/challenges\"\n              style={{\n                color: \"orange\"\n              }}\n            >\n              Challenges\n            </Link>\n          </Menu.Item>\n          <Menu.Item\n            name=\"leaderboard\"\n            active={activeItem === \"leaderboard\"}\n            onClick={this.onMenuItemClick}\n            style={{\n              fontFamily: \"Iceland\",\n              fontSize: \"25px\",\n              padding: \"0px\",\n              margin: \"0px 15px 0px 15px\"\n            }}\n          >\n            <Link\n              to=\"/leaderboard\"\n              style={{\n                color: \"orange\"\n              }}\n            >\n              Leaderboard\n            </Link>\n          </Menu.Item>\n          <Menu.Item\n            name=\"notification\"\n            active={activeItem === \"notification\"}\n            onClick={this.onMenuItemClick}\n            style={{\n              fontFamily: \"Iceland\",\n              fontSize: \"25px\",\n              padding: \"0px\",\n              margin: \"0px 0px 0px 0px\"\n            }}\n          >\n            <Link\n              to=\"/notifications\"\n              style={{\n                color: \"blue\"\n              }}\n            >\n              <Icon name=\"bell\" color=\"blue\" />\n            </Link>\n          </Menu.Item>\n          <Menu.Item\n            name=\"logout\"\n            active={activeItem === \"logout\"}\n            onClick={this.onLogoutHandler}\n            style={{\n              fontFamily: \"Iceland\",\n              fontSize: \"25px\",\n              padding: \"0px\",\n              margin: \"0px 0px 5px 15px\"\n            }}\n          >\n            <Icon name=\"sign-out\" color=\"red\" />\n          </Menu.Item>\n        </Menu.Menu>\n      );\n    }\n\n    return (\n      <div className=\"Navbar\">\n        <Menu pointing secondary>\n          <Menu.Menu position=\"left\">\n            <Menu.Item\n              name=\"home\"\n              onClick={this.onMenuItemClick}\n              style={{ padding: \"0px\" }}\n            >\n              <InertiaLogo />\n            </Menu.Item>\n          </Menu.Menu>\n          {navigations}\n        </Menu>\n      </div>\n    );\n  }\n}\nNavbar.propTypes = {\n  logoutTeam: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { logoutTeam }\n)(Navbar);\n","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  SET_GAME_SETTINGS,\n  SET_GAME_SETTINGS_LOADING,\n  UNSET_GAME_SETTINGS_LOADING\n} from \"./types\";\n\nexport const getGameSettings = () => dispatch => {\n  axios\n    .get(\"/api/gamesettings\")\n    .then(res => {\n      dispatch({\n        type: SET_GAME_SETTINGS,\n        payload: res.data\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n};\n\nexport const setGameSettings = newConfig => dispatch => {\n  dispatch(setLoading());\n  axios\n    .put(\"/api/gamesettings/update\", newConfig)\n    .then(res => {\n      dispatch({\n        type: SET_GAME_SETTINGS,\n        payload: res.data\n      });\n      dispatch({\n        type: GET_ERRORS,\n        payload: {}\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n      dispatch({ type: UNSET_GAME_SETTINGS_LOADING });\n    });\n};\n\nconst setLoading = () => {\n  return {\n    type: SET_GAME_SETTINGS_LOADING\n  };\n};\n","import React, { Component } from \"react\";\n\nimport Moment from \"react-moment\";\n\nimport { Container, Segment, Header } from \"semantic-ui-react\";\n\nclass Clock extends Component {\n  render() {\n    let { start, end } = this.props;\n    start = new Date(start);\n    end = new Date(end);\n    return (\n      <Container>\n        <Segment raised inverted padded color=\"\">\n          <Header as=\"h1\" style={{ fontFamily: \"Iceland\", fontSize: \"40px\" }}>\n            Starts: <Moment format=\"h:mm a\">{start}</Moment> on{\" \"}\n            <Moment format=\"MMMM DD, YYYY\">{start}</Moment>\n          </Header>\n\n          <Header as=\"h1\" style={{ fontFamily: \"Iceland\", fontSize: \"40px\" }}>\n            Ends: <Moment format=\"h:mm a\">{end}</Moment> on{\" \"}\n            <Moment format=\"MMMM DD, YYYY\">{end}</Moment>\n          </Header>\n        </Segment>\n      </Container>\n    );\n  }\n}\n\nexport default Clock;\n","import React, { Component } from \"react\";\nimport \"./Landing.css\";\nimport { Container, Header, Icon, Segment } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { getGameSettings } from \"../../actions/gameSettingAction\";\nimport Clock from \"../Clock/Clock\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    this.props.getGameSettings();\n  }\n  render() {\n    const { settings } = this.props.gameSetting;\n    return (\n      <Container fluid>\n        <Segment inverted>\n          <Header\n            as=\"h1\"\n            style={{\n              fontFamily: \"Iceland\",\n              fontSize: \"60px\",\n              margin: \"40px 0px 0px 0px\",\n              color: \"white\"\n            }}\n          >\n            <Icon name=\"flag outline\" color=\"green\" />\n            {settings.event}\n          </Header>\n          <Header\n            as=\"h1\"\n            style={{\n              fontFamily: \"Iceland\",\n              fontSize: \"40px\",\n              margin: \"0px\",\n              color: \"white\"\n            }}\n          >\n            {settings.organisation}\n          </Header>\n        </Segment>\n        <Clock start={settings.startTime} end={settings.endTime} />\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  gameSetting: state.gameSetting\n});\n\nexport default connect(\n  mapStateToProps,\n  { getGameSettings }\n)(Landing);\n","import React, { Component } from \"react\";\nimport { Button, Form, Segment } from \"semantic-ui-react\";\nimport { registerTeam } from \"../../actions/authAction\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport isEmpty from \"../../validation/is-empty\";\n\nimport \"./Register.css\";\n\nclass Register extends Component {\n  state = {\n    name: \"\",\n    handle: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    errors: {},\n    loading: false\n  };\n\n  componentWillMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.setState({ loading: false });\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ loading: false });\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChangeHandler = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  onSubmitHandler = event => {\n    const newTeam = {\n      name: this.state.name,\n      handle: this.state.handle,\n      email: this.state.email,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword\n    };\n    this.setState({ loading: true });\n\n    this.props.registerTeam(newTeam, this.props.history);\n  };\n\n  render() {\n    const errors = this.state.errors;\n    return (\n      <Segment\n        raised\n        style={{\n          fontFamily: \"Iceland\",\n          margin: \"100px auto 0 auto\",\n          width: \"500px\",\n          borderRadius: \"10px\",\n          border: \"green\"\n        }}\n      >\n        <Form>\n          <h1>Register</h1>\n          <hr />\n          <label>Team Name</label>\n          <br />\n          {isEmpty(errors.name) ? null : <span>{errors.name}</span>}\n          <Form.Input\n            fluid\n            style={{\n              fontFamily: \"Iceland\",\n              fontSize: \"15px\"\n            }}\n            placeholder=\"Team name\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.onChangeHandler}\n            error={!isEmpty(errors.name)}\n          />\n          <label>Team Handle</label>\n          <br />\n          {isEmpty(errors.handle) ? null : <span>{errors.handle}</span>}\n          <Form.Input\n            fluid\n            style={{\n              fontFamily: \"Iceland\",\n              fontSize: \"15px\"\n            }}\n            placeholder=\"Team handle\"\n            name=\"handle\"\n            value={this.state.handle}\n            onChange={this.onChangeHandler}\n            error={!isEmpty(errors.handle)}\n          />\n          <label>E-mail</label>\n          <br />\n          {isEmpty(errors.email) ? null : <span>{errors.email}</span>}\n          <Form.Input\n            fluid\n            style={{\n              fontFamily: \"Iceland\",\n              fontSize: \"15px\"\n            }}\n            placeholder=\"E-mail\"\n            name=\"email\"\n            value={this.state.email}\n            onChange={this.onChangeHandler}\n            error={!isEmpty(errors.email)}\n          />\n          <label>Password</label>\n          <br />\n          {isEmpty(errors.password) ? null : <span>{errors.password}</span>}\n          <Form.Input\n            fluid\n            style={{\n              fontFamily: \"Iceland\",\n              fontSize: \"15px\"\n            }}\n            placeholder=\"Password\"\n            name=\"password\"\n            type=\"password\"\n            value={this.state.password}\n            onChange={this.onChangeHandler}\n            error={!isEmpty(errors.password)}\n          />\n          <label>Confirm Password</label>\n          <br />\n          {isEmpty(errors.confirmPassword) ? null : (\n            <span>{errors.confirmPassword}</span>\n          )}\n          <Form.Input\n            fluid\n            style={{\n              fontFamily: \"Iceland\",\n              fontSize: \"15px\"\n            }}\n            placeholder=\"Confirm Password\"\n            name=\"confirmPassword\"\n            type=\"password\"\n            value={this.state.confirmPassword}\n            onChange={this.onChangeHandler}\n            error={!isEmpty(errors.confirmPassword)}\n          />\n          <Button\n            inverted\n            color=\"green\"\n            type=\"submit\"\n            style={{\n              fontFamily: \"Iceland\",\n              fontSize: \"25px\",\n              padding: \"10px\",\n              width: \"100%\",\n              margin: \"10px 0px 0px 0px\"\n            }}\n            loading={this.state.loading}\n            onClick={this.onSubmitHandler}\n          >\n            Submit\n          </Button>\n        </Form>\n      </Segment>\n    );\n  }\n}\n\nRegister.propTypes = {\n  registerTeam: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { registerTeam }\n)(Register);\n","import React, { Component } from \"react\";\nimport { Button, Form, Segment } from \"semantic-ui-react\";\nimport isEmpty from \"../../validation/is-empty\";\nimport { connect } from \"react-redux\";\nimport { loginTeam } from \"../../actions/authAction\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Login.css\";\n\nclass Login extends Component {\n  state = {\n    handle: \"\",\n    password: \"\",\n    errors: {},\n    loading: false\n  };\n\n  componentWillMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.setState({ loading: false });\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.setState({ loading: false });\n      this.props.history.push(\"/dashboard\");\n    }\n    if (nextProps.errors) {\n      this.setState({ loading: false });\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChangeHandler = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  onSubmitHandler = event => {\n    const teamData = {\n      handle: this.state.handle,\n      password: this.state.password\n    };\n    this.setState({ loading: true });\n\n    this.props.loginTeam(teamData);\n  };\n\n  render() {\n    const errors = this.state.errors;\n\n    return (\n      <Segment\n        raised\n        style={{\n          fontFamily: \"Iceland\",\n          margin: \"100px auto 0 auto\",\n          width: \"500px\",\n          borderRadius: \"10px\",\n          border: \"green\"\n        }}\n      >\n        <Form>\n          <h1>Login</h1>\n          <hr />\n          <label>Team Handle</label>\n          <br />\n          {isEmpty(errors.handle) ? null : <span>{errors.handle}</span>}\n          <Form.Input\n            fluid\n            style={{\n              fontFamily: \"Iceland\",\n              fontSize: \"15px\"\n            }}\n            placeholder=\"Team handle\"\n            name=\"handle\"\n            value={this.state.handle}\n            onChange={this.onChangeHandler}\n            error={!isEmpty(errors.handle)}\n          />\n          <label>Password</label>\n          <br />\n          {isEmpty(errors.password) ? null : <span>{errors.password}</span>}\n          <Form.Input\n            fluid\n            style={{\n              fontFamily: \"Iceland\",\n              fontSize: \"15px\"\n            }}\n            placeholder=\"Password\"\n            name=\"password\"\n            value={this.state.password}\n            type=\"password\"\n            onChange={this.onChangeHandler}\n            error={!isEmpty(errors.password)}\n          />\n          <Button\n            inverted\n            color=\"green\"\n            type=\"submit\"\n            style={{\n              fontFamily: \"Iceland\",\n              fontSize: \"25px\",\n              padding: \"10px\",\n              width: \"100%\",\n              margin: \"10px 0px 0px 0px\"\n            }}\n            loading={this.state.loading}\n            onClick={this.onSubmitHandler}\n          >\n            Submit\n          </Button>\n        </Form>\n      </Segment>\n    );\n  }\n}\n\nLogin.propTypes = {\n  loginTeam: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { loginTeam }\n)(Login);\n","import axios from \"axios\";\nimport { GET_CHALLENGES, SET_LOADING_CHALLENGES } from \"./types\";\n\n// Get all challenges\nexport const getChallenges = () => dispatch => {\n  dispatch(setLoading());\n  axios\n    .get(\"/api/challenges\")\n    .then(res => {\n      dispatch({\n        type: GET_CHALLENGES,\n        payload: res.data\n      });\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_CHALLENGES,\n        payload: []\n      })\n    );\n};\n\nconst setLoading = () => {\n  return {\n    type: SET_LOADING_CHALLENGES\n  };\n};\n","const Aux = ( props ) =>( props.children )\n\nexport default Aux;","import React, { Component } from \"react\";\nimport { Card, Input, Icon, Label } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport isEmpty from \"../../../../validation/is-empty\";\nimport Aux from \"../../../../hoc/Aux\";\nimport \"./Challenge.css\";\n\nclass Challenge extends Component {\n  state = {\n    show: false,\n    flag: \"\",\n    errors: {},\n    solved: false\n  };\n  componentDidMount() {\n    this.setState({\n      solved:\n        this.props.challenge.solvedBy.filter(\n          team => team._id.toString() === this.props.auth.team.id.toString()\n        ).length > 0\n    });\n  }\n  onChangeHandler = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n  onFlagSubmit = () => {\n    axios\n      .post(`/api/submissions/submit/${this.props.challenge._id}`, {\n        flag: this.state.flag\n      })\n      .then(res => {\n        if (res.data.verdict === \"Wrong\") {\n          this.setState({\n            errors: { verdict: res.data.verdict }\n          });\n        } else {\n          if (res.data.verdict === \"Correct\") {\n            // this.props.getChallenges();\n          }\n          this.setState({\n            errors: { verdict: res.data.verdict },\n            solved: true\n          });\n        }\n      })\n      .catch(err => {\n        this.setState({\n          errors: err.response.data\n        });\n      });\n  };\n\n  onClick = () => {\n    this.setState({\n      show: !this.state.show,\n      flag: \"\",\n      errors: {}\n    });\n  };\n  render() {\n    const { name, value, description, solvedBy } = this.props.challenge;\n    const { errors } = this.state;\n    let errorLabel;\n    let solved_input = true;\n\n    if (isEmpty(errors)) {\n      errorLabel = null;\n    } else {\n      if (isEmpty(errors.verdict)) {\n        solved_input = false;\n        errorLabel = (\n          <Label basic color=\"red\" size=\"large\" pointing>\n            {errors.flag}\n          </Label>\n        );\n      } else {\n        if (errors.verdict === \"Wrong\") {\n          solved_input = false;\n          errorLabel = (\n            <Label basic color=\"red\" size=\"large\" pointing>\n              Ooopss. Incorrect\n            </Label>\n          );\n        } else {\n          errorLabel = (\n            <Label basic color=\"green\" size=\"large\" pointing>\n              Correct Answer\n            </Label>\n          );\n        }\n      }\n    }\n\n    const solvedByContent = solvedBy.map(team => (\n      <Label\n        style={{\n          margin: \"10px 10px 0px 0px\",\n          padding: \"3px\",\n          fontSize: \"13px\"\n        }}\n      >\n        {team.name}\n      </Label>\n    ));\n\n    return (\n      <Card\n        raised\n        inverted\n        fluid={this.state.show}\n        style={{\n          fontFamily: \"Iceland\",\n          fontSize: \"15px\",\n          borderRadius: \"25px\"\n          // backgroundColor: this.state.solved ? \"#E8F5E9\" : \"white\",\n          // textAlign: \"center\"\n        }}\n        size=\"big\"\n        color={this.props.color}\n        link\n      >\n        <Card.Content onClick={this.onClick}>\n          <Card.Header>\n            {name}\n            {this.state.solved ? (\n              <Icon name=\"check circle outline\" color=\"green\" />\n            ) : null}\n          </Card.Header>\n          <Card.Meta style={{ fontSize: \"30px\" }}>{`${value}`}</Card.Meta>\n        </Card.Content>\n        {this.state.show ? (\n          <Aux>\n            <Card.Content extra>\n              <Card.Description style={{ fontSize: \"20px\" }}>\n                {description}\n              </Card.Description>\n              <Input\n                style={{\n                  margin: \"20px 0px 0px 0px\"\n                }}\n                size=\"medium\"\n                icon={\n                  <Icon\n                    inverted\n                    color=\"green\"\n                    circular\n                    link\n                    name=\"send\"\n                    onClick={this.onFlagSubmit}\n                  />\n                }\n                error={!solved_input}\n                fluid\n                placeholder=\"Enter the Flag\"\n                name=\"flag\"\n                value={this.state.flag}\n                onChange={this.onChangeHandler}\n              />\n              {errorLabel}\n            </Card.Content>\n            <Card.Content extra>\n              <Card.Description>\n                <Label\n                  basic\n                  color=\"green\"\n                  style={{\n                    margin: \"10px 10px 10px 0px\",\n                    color: \"teal\",\n                    fontSize: \"15px\",\n                    padding: \"3px\"\n                  }}\n                >\n                  Solved By\n                </Label>\n                {solvedByContent}\n              </Card.Description>\n            </Card.Content>\n          </Aux>\n        ) : null}\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(Challenge);\n","import React, { Component } from \"react\";\nimport { Container, Header, Card, Label } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { getChallenges } from \"../../../actions/challengeAction\";\n\nimport \"./Category.css\";\nimport Challenge from \"./Challenge/Challenge\";\nclass Category extends Component {\n  state = {\n    show: false\n  };\n  onClickShow = () => {\n    this.setState({\n      show: !this.state.show\n    });\n  };\n  render() {\n    const challenges = this.props.challenges.map((challenge, index) => (\n      <Challenge\n        color={this.props.color}\n        key={index}\n        challenge={challenge}\n        getChallenges={this.props.getChallenges}\n      />\n    ));\n\n    let solved = this.props.challenges.filter(\n      challenge =>\n        challenge.solvedBy.filter(\n          team => team._id.toString() === this.props.auth.team.id.toString()\n        ).length > 0\n    ).length;\n    const total = this.props.challenges.length;\n\n    return (\n      <div className=\"category\">\n        <Container>\n          <Header\n            onClick={this.onClickShow}\n            as=\"h2\"\n            color={this.props.color}\n            style={{\n              fontFamily: \"Iceland\",\n              fontSize: \"3em\"\n            }}\n          >\n            {this.props.category.toUpperCase()}\n            <Label\n              pointing=\"left\"\n              // circular\n              style={{ fontSize: \"20px\", padding: \"8px\", margin: \"5px 20px\" }}\n              basic\n              color={solved === total ? \"green\" : \"red\"}\n            >{`Solved: ${solved}/${total}`}</Label>\n          </Header>\n          {this.state.show ? <Card.Group>{challenges}</Card.Group> : null}\n        </Container>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(\n  mapStateToProps,\n  { getChallenges }\n)(Category);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getChallenges } from \"../../actions/challengeAction\";\nimport \"./Challenges.css\";\nimport Category from \"./Category/Category\";\nimport { Container, Segment, Header, Loader, Dimmer } from \"semantic-ui-react\";\nimport { getGameSettings } from \"../../actions/gameSettingAction\";\n\nclass Challenges extends Component {\n  state = {\n    show: []\n  };\n\n  componentDidMount() {\n    this.props.getGameSettings();\n    this.props.getChallenges();\n  }\n\n  render() {\n    let contestRunning = false;\n    if (\n      this.props.challenge.isLoading ||\n      !this.props.gameSetting.settings.startTime\n    ) {\n      return (\n        <Container>\n          <Dimmer inverted style={{ margin: \"65px 0px 0px 0px\" }} active>\n            <Loader>Loading...</Loader>\n          </Dimmer>\n        </Container>\n      );\n    }\n    if (this.props.gameSetting.settings.startTime) {\n      const start = new Date(this.props.gameSetting.settings.startTime);\n      const current = new Date(Date.now());\n      contestRunning = current >= start;\n    }\n\n    if (!contestRunning) {\n      return (\n        <Container fluid>\n          <Segment inverted>\n            <Header as=\"h1\"> Contest has not started </Header>\n          </Segment>\n        </Container>\n      );\n    }\n    const { challenge } = this.props;\n    const { challenges } = challenge;\n\n    const categories = [\n      ...new Set(challenges.map(challenge => challenge.category))\n    ];\n    const colorOptions = [\n      \"red\",\n      \"orange\",\n      \"olive\",\n      \"green\",\n      \"teal\",\n      \"blue\",\n      \"violet\",\n      \"purple\",\n      \"pink\",\n      \"brown\"\n    ];\n    const allCategories = categories.map((category, index) => {\n      return (\n        <Segment\n          key={index}\n          raised\n          style={{\n            borderRadius: \"25px\"\n          }}\n        >\n          <Category\n            color={colorOptions[index % colorOptions.length]}\n            category={category}\n            challenges={challenges.filter(\n              challenge => challenge.category === category\n            )}\n          />\n        </Segment>\n      );\n    });\n\n    return (\n      <div className=\"challenges\" style={{ margin: \"20px 0px 0px 0px\" }}>\n        <Container>{allCategories}</Container>\n      </div>\n    );\n  }\n}\n\nChallenges.propTypes = {\n  getChallenges: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  challenge: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  challenge: state.challenge,\n  gameSetting: state.gameSetting\n});\n\nexport default connect(\n  mapStateToProps,\n  { getChallenges, getGameSettings }\n)(Challenges);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        auth.isAuthenticated === true ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/\" />\n        )\n      }\n    />\n  );\n};\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(PrivateRoute);\n","import React, { Component } from \"react\";\nimport { Table, Container, Dimmer, Loader } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\n\nclass Leaderboard extends Component {\n  state = {\n    teams: [],\n    isLoading: false\n  };\n  componentDidMount() {\n    this.setState({ isLoading: true });\n    axios\n      .get(\"/api/teams/leaderboard\")\n      .then(res => {\n        this.setState({\n          teams: res.data,\n          isLoading: false\n        });\n      })\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return (\n        <Container>\n          <Dimmer inverted style={{ margin: \"65px 0px 0px 0px\" }} active>\n            <Loader>Loading...</Loader>\n          </Dimmer>\n        </Container>\n      );\n    }\n    const { teams } = this.state;\n\n    const leaderboardContent = teams.map((team, index) => (\n      <Table.Row key={index} positive={team._id === this.props.auth.team.id}>\n        <Table.Cell>{index + 1}</Table.Cell>\n        <Table.Cell>{team.name}</Table.Cell>\n        <Table.Cell>{team.handle}</Table.Cell>\n        <Table.Cell>{team.score}</Table.Cell>\n      </Table.Row>\n    ));\n\n    return (\n      <Container\n        style={{\n          margin: \"20px auto\"\n        }}\n      >\n        <Table color=\"teal\" padded celled>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Rank</Table.HeaderCell>\n              <Table.HeaderCell>Team Name</Table.HeaderCell>\n              <Table.HeaderCell>Handle</Table.HeaderCell>\n              <Table.HeaderCell>Score</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>{leaderboardContent}</Table.Body>\n        </Table>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(Leaderboard);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getChallenges } from \"../../actions/challengeAction\";\nimport \"./Dashboard.css\";\nimport {\n  Segment,\n  Header,\n  Container,\n  Item,\n  Label,\n  Table,\n  Dimmer,\n  Loader\n} from \"semantic-ui-react\";\nimport axios from \"axios\";\n\nclass Dashboard extends Component {\n  state = {\n    teams: [],\n    submissions: [],\n    isLoading: true\n  };\n  componentDidMount() {\n    this.props.getChallenges();\n    axios\n      .get(\"/api/teams/leaderboard\")\n      .then(res => {\n        this.setState({\n          teams: res.data\n        });\n      })\n      .catch(err => console.log(err));\n    this.setState({ isLoading: true });\n    axios\n      .get(\"/api/submissions/\")\n      .then(res => {\n        this.setState({\n          submissions: res.data,\n          isLoading: false\n        });\n      })\n      .catch(err => {\n        this.setState({\n          submissions: [],\n          isLoading: false\n        });\n      });\n  }\n  render() {\n    const { team } = this.props.auth;\n    const { challenges } = this.props.challenge;\n    const { teams } = this.state;\n    const teamIndex = teams.findIndex(t => t._id === team.id);\n    let score = 0,\n      rank = 0;\n    if (teamIndex >= 0) {\n      score = teams[teamIndex].score;\n      rank = teamIndex + 1;\n    }\n    const colorOptions = [\n      \"red\",\n      \"orange\",\n      \"olive\",\n      \"green\",\n      \"teal\",\n      \"blue\",\n      \"violet\",\n      \"purple\",\n      \"pink\",\n      \"brown\"\n    ];\n    const categories = [\n      ...new Set(challenges.map(challenge => challenge.category))\n    ];\n    const solvedChallenges = categories.map((category, index) => (\n      <Item key={index}>\n        <Item.Content>\n          <Item.Header\n            style={{\n              color: colorOptions[index % colorOptions.length],\n              fontSize: \"25px\"\n            }}\n          >\n            {category.toUpperCase()}\n          </Item.Header>\n          <Item.Description>\n            {challenges\n              .filter(challenge => challenge.category === category)\n              .filter(\n                challenge =>\n                  challenge.solvedBy.filter(t => t._id === team.id).length > 0\n              )\n              .map((challenge, ind) => (\n                <Label\n                  key={ind}\n                  color=\"grey\"\n                  size=\"large\"\n                  style={{ margin: \"5px\" }}\n                >\n                  {challenge.name}\n                </Label>\n              ))}\n          </Item.Description>\n        </Item.Content>\n      </Item>\n    ));\n\n    const submissionsContent = this.state.submissions.map(\n      (submission, index) => (\n        <Table.Row positive={submission.verdict === \"Correct\"}>\n          <Table.Cell>{index + 1}</Table.Cell>\n          <Table.Cell>{submission.challenge.name}</Table.Cell>\n          <Table.Cell>{submission.verdict}</Table.Cell>\n          <Table.Cell>{submission.flag}</Table.Cell>\n          {/* <Table.Cell>{submission.date}</Table.Cell> */}\n        </Table.Row>\n      )\n    );\n\n    return (\n      <div className=\"dashboard\">\n        <Segment\n          style={{ margin: \"0px\", fontFamily: \"Iceland\" }}\n          textAlign=\"center\"\n          inverted\n          padded\n        >\n          <Header\n            as=\"h1\"\n            style={{\n              fontSize: \"50px\",\n              fontFamily: \"Iceland\",\n              padding: \"0px\",\n              margin: \"10px\"\n            }}\n          >\n            {team.name}\n          </Header>\n          <Header\n            as=\"h3\"\n            style={{\n              fontSize: \"25px\",\n              fontFamily: \"Iceland\",\n              padding: \"0px\",\n              margin: \"10px\"\n            }}\n          >\n            @{team.handle}\n          </Header>\n          <Header\n            as=\"h2\"\n            style={{\n              fontSize: \"40px\",\n              fontFamily: \"Iceland\",\n              padding: \"0px\",\n              margin: \"10px\"\n            }}\n          >\n            Score: {score}\n          </Header>\n          <Header\n            as=\"h2\"\n            style={{\n              fontSize: \"40px\",\n              fontFamily: \"Iceland\",\n              padding: \"0px\",\n              margin: \"10px\"\n            }}\n          >\n            Rank: {rank}\n          </Header>\n        </Segment>\n        <Container>\n          <Segment raised padded style={{ margin: \"10px auto\" }}>\n            <Header as=\"h1\">Solved</Header>\n            <hr />\n            <Item.Group>\n              {this.props.challenge.isLoading ? (\n                <Dimmer inverted active>\n                  <Loader />\n                </Dimmer>\n              ) : (\n                solvedChallenges\n              )}\n            </Item.Group>\n          </Segment>\n        </Container>\n        <Container>\n          <Segment raised padded style={{ margin: \"10px auto\" }}>\n            <Header as=\"h1\">Submissions</Header>\n            <hr />\n\n            <Table color=\"teal\" padded celled>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell width={2}>S. No.</Table.HeaderCell>\n                  <Table.HeaderCell>Challenge</Table.HeaderCell>\n                  <Table.HeaderCell>Verdict</Table.HeaderCell>\n                  <Table.HeaderCell>Flag</Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                <Dimmer inverted active={this.state.isLoading}>\n                  <Loader />\n                </Dimmer>\n                {submissionsContent}\n              </Table.Body>\n            </Table>\n          </Segment>\n        </Container>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  challenge: state.challenge\n});\nexport default connect(\n  mapStateToProps,\n  { getChallenges }\n)(Dashboard);\n","import axios from \"axios\";\nimport {\n  GET_NOTIFICATIONS,\n  GET_ERRORS,\n  SET_LOADING_NOTIFICATIONS\n} from \"./types\";\n\nexport const getNotifications = () => dispatch => {\n  dispatch(setLoading());\n  axios\n    .get(\"/api/notifications\")\n    .then(res => {\n      dispatch({\n        type: GET_NOTIFICATIONS,\n        payload: res.data\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n};\n\nconst setLoading = () => {\n  return {\n    type: SET_LOADING_NOTIFICATIONS\n  };\n};\n","import React, { Component } from \"react\";\nimport {\n  Segment,\n  Header,\n  Message,\n  Container,\n  Dimmer,\n  Loader\n} from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { getNotifications } from \"../../actions/notificationsAction\";\nimport Moment from \"react-moment\";\n\nclass Notifications extends Component {\n  state = {\n    loading: true\n  };\n  componentDidMount() {\n    this.props.getNotifications();\n  }\n\n  render() {\n    const { notifications } = this.props.notification;\n    const notificationsContent = notifications.map((notification, index) => (\n      <Message\n        key={index}\n        floating\n        style={{ margin: \"10px 0px\", fontFamily: \"Iceland\" }}\n      >\n        <Message.Header>\n          <Moment format=\"h:mm a, MMMM DD\">{notification.date}</Moment>\n        </Message.Header>\n        <p style={{ fontSize: \"25px\" }}>{notification.text}</p>\n      </Message>\n    ));\n    return (\n      <div>\n        <Segment\n          style={{ margin: \"0px\", fontFamily: \"Iceland\" }}\n          textAlign=\"center\"\n          inverted\n          padded\n        >\n          <Header\n            as=\"h1\"\n            style={{\n              fontSize: \"50px\",\n              fontFamily: \"Iceland\",\n              padding: \"0px\",\n              margin: \"10px\"\n            }}\n          >\n            Notifications\n          </Header>\n        </Segment>\n        <Container>\n          {this.props.notification.isLoading ? (\n            <Dimmer inverted style={{ margin: \"191px 0px 0px\" }} active>\n              <Loader />\n            </Dimmer>\n          ) : (\n            notificationsContent\n          )}\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  notification: state.notification\n});\n\nexport default connect(\n  mapStateToProps,\n  { getNotifications }\n)(Notifications);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst AdminRoute = ({ component: Component, auth, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        auth.isAuthenticated === true && auth.team.handle === \"admin\" ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/\" />\n        )\n      }\n    />\n  );\n};\n\nAdminRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(AdminRoute);\n","import React, { Component } from \"react\";\n\nclass Statistics extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Statistics</h1>\n      </div>\n    );\n  }\n}\n\nexport default Statistics;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getNotifications } from \"../../actions/notificationsAction\";\nimport isEmpty from \"../../validation/is-empty\";\n\nimport axios from \"axios\";\n\nimport {\n  Message,\n  Icon,\n  TextArea,\n  Header,\n  Modal,\n  Button,\n  Label,\n  Popup\n} from \"semantic-ui-react\";\nimport Moment from \"react-moment\";\n\nclass Notifications extends Component {\n  state = {\n    modalOpen: false,\n    modalText: \"\",\n    modalAddLoading: false,\n    error: {}\n  };\n\n  onDeleteClick = id => {\n    axios\n      .delete(`/api/notifications/${id}`)\n      .then(res => this.props.getNotifications())\n      .catch(err => console.log(err));\n  };\n\n  componentDidMount() {\n    this.props.getNotifications();\n  }\n  modalOpenHandler = () => {\n    this.setState({ modalOpen: true, modalText: \"\" });\n  };\n\n  modalOnChangeHandler = e => {\n    this.setState({ modalText: e.target.value });\n  };\n\n  addNewNotification = () => {\n    const notification = {\n      text: this.state.modalText\n    };\n    this.setState({ modalAddLoading: true });\n    axios\n      .post(\"/api/notifications\", notification)\n      .then(res => {\n        this.setState({ modalAddLoading: false, modalOpen: false });\n        this.props.getNotifications();\n      })\n      .catch(err => {\n        this.setState({\n          modalTextError: err.response.data,\n          modalAddLoading: false\n        });\n      });\n  };\n\n  render() {\n    const { notifications } = this.props.notification;\n    const notificationsContent = notifications.map((notification, index) => (\n      <Message\n        key={index}\n        floating\n        style={{ margin: \"10px 0px\", fontFamily: \"Iceland\" }}\n      >\n        <Message.Header>\n          <Moment format=\"h:mm a, MMMM DD\">{notification.date}</Moment>\n          <Icon\n            name=\"delete\"\n            color=\"red\"\n            link\n            style={{ margin: \"10px\" }}\n            onClick={() => this.onDeleteClick(notification._id)}\n          />\n        </Message.Header>\n        <p style={{ fontSize: \"25px\" }}>{notification.text}</p>\n      </Message>\n    ));\n    return (\n      <div>\n        <Header as=\"h1\">\n          <Modal\n            trigger={\n              <Popup\n                content=\"New Notification\"\n                position=\"bottom center\"\n                inverted\n                trigger={\n                  <Icon\n                    onClick={this.modalOpenHandler}\n                    name=\"add circle\"\n                    color=\"green\"\n                    link\n                  />\n                }\n              />\n            }\n            open={this.state.modalOpen}\n            onClose={() => this.setState({ modalOpen: false })}\n          >\n            <Modal.Header style={{ fontFamily: \"Iceland\", fontSize: \"25px\" }}>\n              Add a new notification\n            </Modal.Header>\n            <Modal.Content>\n              <Modal.Description>\n                <TextArea\n                  value={this.state.modalText}\n                  onChange={this.modalOnChangeHandler}\n                  style={{\n                    width: \"100%\",\n                    fontFamily: \"Iceland\",\n                    fontSize: \"25px\"\n                  }}\n                  rows={5}\n                />\n                {isEmpty(this.state.modalTextError) ? null : (\n                  <Label color=\"red\" basic pointing>\n                    {this.state.modalTextError.text}\n                  </Label>\n                )}\n              </Modal.Description>\n              <Button\n                basic\n                color=\"green\"\n                onClick={this.addNewNotification}\n                loading={this.state.modalAddLoading}\n                style={{ margin: \"10px 0px 0px 0px\" }}\n              >\n                Add\n              </Button>\n            </Modal.Content>\n          </Modal>\n        </Header>\n        {notificationsContent}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  notification: state.notification\n});\n\nexport default connect(\n  mapStateToProps,\n  { getNotifications }\n)(Notifications);\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  Icon,\n  Popup,\n  Modal,\n  Header,\n  Form,\n  Button\n} from \"semantic-ui-react\";\nimport { getChallenges } from \"../../actions/challengeAction\";\nimport { connect } from \"react-redux\";\nimport isEmpty from \"../../validation/is-empty\";\nimport axios from \"axios\";\n\nclass Challenges extends Component {\n  state = {\n    modalOpen: false,\n    challenge: {},\n    errors: {},\n    modalLoading: false,\n    newChallenge: false\n  };\n\n  modalOpenHandler = challenge => {\n    this.setState({\n      modalOpen: true,\n      challenge: challenge,\n      newChallenge: isEmpty(challenge)\n    });\n  };\n\n  modalCloseHandler = () => {\n    this.setState({ modalOpen: false, challenge: {}, errors: {} });\n  };\n\n  componentDidMount() {\n    this.props.getChallenges();\n  }\n\n  onChangeHandler = e => {\n    this.setState({\n      challenge: { ...this.state.challenge, [e.target.name]: e.target.value }\n    });\n  };\n  onSubmitHandler = () => {\n    this.setState({ modalLoading: true });\n    const challengeData = { ...this.state.challenge, state: \"visible\" };\n    console.log(challengeData);\n    if (this.state.newChallenge) {\n      // Create new challenge\n      axios\n        .post(\"/api/challenges/add\", challengeData)\n        .then(res => {\n          console.log(res);\n          this.setState({ modalOpen: false, modalLoading: false });\n          this.props.getChallenges();\n        })\n        .catch(err => {\n          console.log(err.response.data);\n          this.setState({ errors: err.response.data, modalLoading: false });\n        });\n    } else {\n      // Update existing challenge\n      axios\n        .put(`/api/challenges/update/${challengeData._id}`, challengeData)\n        .then(res => {\n          this.setState({ modalOpen: false, modalLoading: false });\n          this.props.getChallenges();\n        })\n        .catch(err => {\n          this.setState({ errors: err.response.data, modalLoading: false });\n        });\n    }\n  };\n  onDeleteClick = id => {\n    axios\n      .delete(`/api/challenges/delete/${id}`)\n      .then(res => this.props.getChallenges())\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    const errors = this.state.errors;\n\n    const challengeContent = this.props.challenge.challenges.map(challenge => (\n      <Card fluid raised>\n        <Card.Content>\n          <Card.Header>\n            {challenge.name}\n            <Popup\n              inverted\n              content=\"Edit\"\n              position=\"top center\"\n              trigger={\n                <Icon\n                  name=\"edit\"\n                  color=\"blue\"\n                  inverted\n                  link\n                  style={{ margin: \"0px 10px\" }}\n                  onClick={() => this.modalOpenHandler(challenge)}\n                />\n              }\n            />\n            <Icon\n              name=\"delete\"\n              color=\"red\"\n              link\n              style={{ margin: \"0px 0px\" }}\n              onClick={() => this.onDeleteClick(challenge._id)}\n            />\n          </Card.Header>\n          <Card.Meta>{challenge.value}</Card.Meta>\n          <Card.Description>{challenge.description}</Card.Description>\n        </Card.Content>\n      </Card>\n    ));\n\n    return (\n      <div>\n        <Modal\n          trigger={\n            <Header as=\"h1\">\n              <Popup\n                content=\"New Challenge\"\n                position=\"bottom center\"\n                inverted\n                trigger={\n                  <Icon\n                    onClick={() => this.modalOpenHandler({})}\n                    name=\"add circle\"\n                    color=\"green\"\n                    link\n                  />\n                }\n              />\n            </Header>\n          }\n          open={this.state.modalOpen}\n          onClose={this.modalCloseHandler}\n        >\n          <Modal.Header style={{ fontFamily: \"Iceland\", fontSize: \"25px\" }}>\n            {this.state.newChallenge ? \"Create Challenge\" : \"Update Challenge\"}\n          </Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <Form style={{ fontFamily: \"Iceland\" }}>\n                <label style={{ fontSize: \"20px\", margin: \"1px 1px\" }}>\n                  Challenge Name\n                </label>\n                <br />\n                {isEmpty(errors.name) ? null : <span>{errors.name}</span>}\n                <Form.Input\n                  style={{\n                    fontFamily: \"Iceland\",\n                    fontSize: \"15px\"\n                  }}\n                  placeholder=\"Challenge Name\"\n                  name=\"name\"\n                  value={this.state.challenge.name}\n                  onChange={this.onChangeHandler}\n                  error={!isEmpty(errors.name)}\n                />\n\n                <label style={{ fontSize: \"20px\", margin: \"1px 1px\" }}>\n                  Category\n                </label>\n                <br />\n                {isEmpty(errors.category) ? null : (\n                  <span>{errors.category}</span>\n                )}\n                <Form.Input\n                  style={{\n                    fontFamily: \"Iceland\",\n                    fontSize: \"15px\"\n                  }}\n                  placeholder=\"Category\"\n                  name=\"category\"\n                  value={this.state.challenge.category}\n                  onChange={this.onChangeHandler}\n                  error={!isEmpty(errors.category)}\n                />\n\n                <label style={{ fontSize: \"20px\", margin: \"1px 1px\" }}>\n                  Description\n                </label>\n                <br />\n                {isEmpty(errors.description) ? null : (\n                  <span>{errors.description}</span>\n                )}\n                <Form.TextArea\n                  value={this.state.challenge.description}\n                  onChange={this.onChangeHandler}\n                  name=\"description\"\n                  placeholder=\"Description\"\n                  style={{\n                    width: \"100%\",\n                    fontSize: \"14px\"\n                  }}\n                  rows={3}\n                  error={!isEmpty(errors.description)}\n                />\n\n                <label style={{ fontSize: \"20px\", margin: \"1px 1px\" }}>\n                  Value\n                </label>\n                <br />\n                {isEmpty(errors.value) ? null : <span>{errors.value}</span>}\n                <Form.Input\n                  style={{\n                    fontFamily: \"Iceland\",\n                    fontSize: \"15px\"\n                  }}\n                  placeholder=\"Value\"\n                  name=\"value\"\n                  value={this.state.challenge.value}\n                  onChange={this.onChangeHandler}\n                  error={!isEmpty(errors.value)}\n                />\n\n                <label style={{ fontSize: \"20px\", margin: \"1px 1px\" }}>\n                  Flag\n                </label>\n                <br />\n                {isEmpty(errors.flag) ? null : <span>{errors.flag}</span>}\n                <Form.Input\n                  style={{\n                    fontFamily: \"Iceland\",\n                    fontSize: \"15px\"\n                  }}\n                  placeholder=\"Flag\"\n                  name=\"flag\"\n                  value={this.state.challenge.flag}\n                  onChange={this.onChangeHandler}\n                  error={!isEmpty(errors.flag)}\n                />\n              </Form>\n            </Modal.Description>\n            <Button\n              basic\n              color=\"green\"\n              style={{ margin: \"10px 0px 0px 0px\" }}\n              loading={this.state.modalLoading}\n              onClick={this.onSubmitHandler}\n            >\n              {this.state.newChallenge ? \"Create\" : \"Update\"}\n            </Button>\n          </Modal.Content>\n        </Modal>\n        {challengeContent}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  challenge: state.challenge,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getChallenges }\n)(Challenges);\n","import React, { Component } from \"react\";\nimport { Form, Icon, Button } from \"semantic-ui-react\";\nimport isEmpty from \"../../validation/is-empty\";\nimport { connect } from \"react-redux\";\nimport { DateTimeInput } from \"semantic-ui-calendar-react\";\nimport {\n  getGameSettings,\n  setGameSettings\n} from \"../../actions/gameSettingAction\";\nimport moment from \"moment\";\n\nclass Config extends Component {\n  state = {\n    organisation: \"\",\n    event: \"\",\n    startTime: \"\",\n    endTime: \"\"\n  };\n  componentDidMount() {\n    this.props.getGameSettings();\n  }\n\n  componentWillReceiveProps = next => {\n    if (!isEmpty(next.gameSetting.settings)) {\n      this.setState({\n        organisation: next.gameSetting.settings.organisation,\n        event: next.gameSetting.settings.event,\n        startTime: next.gameSetting.settings.startTime,\n        endTime: next.gameSetting.settings.endTime\n      });\n    }\n  };\n\n  onChangeHandler = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onDateChangeHandler = (e, { name, value }) => {\n    this.setState({ [name]: value });\n  };\n\n  saveChangesHandler = () => {\n    const newConfig = {\n      organisation: this.state.organisation,\n      event: this.state.event,\n      startTime: moment(this.state.startTime).toString(),\n      endTime: moment(this.state.endTime).toString()\n    };\n    this.props.setGameSettings(newConfig);\n  };\n\n  render() {\n    const { errors } = this.props;\n\n    return (\n      <Form style={{ fontFamily: \"Iceland\" }}>\n        <label style={{ fontSize: \"25px\", margin: \"5px 1px\" }}>\n          Organisation\n        </label>\n        <br />\n        {isEmpty(errors.organisation) ? null : (\n          <span>{errors.organisation}</span>\n        )}\n        <Form.Input\n          style={{\n            fontFamily: \"Iceland\",\n            fontSize: \"15px\"\n          }}\n          placeholder=\"Organisation\"\n          name=\"organisation\"\n          value={this.state.organisation}\n          onChange={this.onChangeHandler}\n          error={!isEmpty(errors.organisation)}\n        />\n        <label style={{ fontSize: \"25px\", margin: \"5px 1px\" }}>\n          Event Name\n        </label>\n        <br />\n        {isEmpty(errors.event) ? null : <span>{errors.event}</span>}\n        <Form.Input\n          style={{\n            fontFamily: \"Iceland\",\n            fontSize: \"15px\"\n          }}\n          placeholder=\"Event\"\n          name=\"event\"\n          value={this.state.event}\n          onChange={this.onChangeHandler}\n          error={!isEmpty(errors.event)}\n        />\n\n        <label style={{ fontSize: \"25px\", margin: \"5px 1px\" }}>\n          Start Date & Time\n        </label>\n        <br />\n        {isEmpty(errors.startTime) ? null : <span>{errors.startTime}</span>}\n        <Form.Input>\n          <DateTimeInput\n            name=\"startTime\"\n            value={this.state.startTime}\n            placeholder=\"Start Date & Time\"\n            onChange={this.onDateChangeHandler}\n            iconPosition=\"left\"\n            closeOnMouseLeave\n            clearable\n            closable\n            dateFormat=\"YYYY-MM-DD\"\n            clearIcon={<Icon name=\"remove\" color=\"red\" />}\n          />\n        </Form.Input>\n        <label style={{ fontSize: \"25px\", margin: \"5px 1px\" }}>\n          End Date & Time\n        </label>\n        <br />\n        {isEmpty(errors.endTime) ? null : <span>{errors.endTime}</span>}\n        <Form.Input>\n          <DateTimeInput\n            name=\"endTime\"\n            value={this.state.endTime}\n            placeholder=\"End Date & Time\"\n            onChange={this.onDateChangeHandler}\n            iconPosition=\"left\"\n            closeOnMouseLeave\n            clearable\n            closable\n            dateFormat=\"YYYY-MM-DD\"\n            clearIcon={<Icon name=\"remove\" color=\"red\" />}\n          />\n        </Form.Input>\n\n        <Button\n          loading={this.props.gameSetting.loading}\n          basic\n          color=\"green\"\n          onClick={this.saveChangesHandler}\n          type=\"submit\"\n        >\n          Save\n        </Button>\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  gameSetting: state.gameSetting\n});\n\nexport default connect(\n  mapStateToProps,\n  { getGameSettings, setGameSettings }\n)(Config);\n","import React, { Component } from \"react\";\n\nclass Teams extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Teams</h1>\n      </div>\n    );\n  }\n}\n\nexport default Teams;\n","import React, { Component } from \"react\";\nimport {\n  Pagination,\n  Icon,\n  Loader,\n  Dimmer,\n  Table,\n  Segment,\n  Container,\n  Checkbox,\n  Grid\n} from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport Moment from \"react-moment\";\n\nconst PAGE_ELEMENT_COUNT = 20;\n\nclass Submissions extends Component {\n  state = { page: 1, submissions: [], loading: false, correctOnly: false };\n\n  componentDidMount() {\n    this.setState({ loading: true });\n    axios\n      .get(\"/api/submissions/all\")\n      .then(res => {\n        this.setState({ submissions: res.data, loading: false });\n      })\n      .catch(err => this.setState({ loading: false, submissions: [] }));\n  }\n\n  onPageChange = (event, data) => {\n    this.setState({ page: data.activePage });\n  };\n\n  onCorrectToggle = () => {\n    this.setState({ correctOnly: !this.state.correctOnly });\n  };\n\n  render() {\n    let totalPages = Math.floor(\n      this.state.submissions.length / PAGE_ELEMENT_COUNT\n    );\n    const start = (this.state.page - 1) * PAGE_ELEMENT_COUNT;\n    const end = this.state.page * PAGE_ELEMENT_COUNT;\n    let submissions = this.state.submissions.slice(start, end);\n    let submissionsContent = submissions.map((submission, index) => (\n      <Table.Row positive={submission.verdict === \"Correct\"}>\n        <Table.Cell>{start + index + 1}</Table.Cell>\n        <Table.Cell>\n          {submission.team === null ? \"\" : submission.team.name}\n        </Table.Cell>\n        <Table.Cell>{submission.challenge.name}</Table.Cell>\n        <Table.Cell>{submission.verdict}</Table.Cell>\n        <Table.Cell>{submission.flag}</Table.Cell>\n        <Table.Cell>\n          <Moment format=\"h:mm a , DD MMMM\">{submission.date}</Moment>\n        </Table.Cell>\n      </Table.Row>\n    ));\n\n    if (this.state.correctOnly) {\n      totalPages = Math.floor(\n        this.state.submissions.filter(\n          submission => submission.verdict === \"Correct\"\n        ).length / PAGE_ELEMENT_COUNT\n      );\n      submissions = this.state.submissions\n        .filter(submission => submission.verdict === \"Correct\")\n        .slice(start, end);\n      submissionsContent = submissions.map((submission, index) => (\n        <Table.Row positive={submission.verdict === \"Correct\"}>\n          <Table.Cell>{start + index + 1}</Table.Cell>\n          <Table.Cell>{submission.team.name}</Table.Cell>\n          <Table.Cell>{submission.challenge.name}</Table.Cell>\n          <Table.Cell>{submission.verdict}</Table.Cell>\n          <Table.Cell>{submission.flag}</Table.Cell>\n          <Table.Cell>\n            <Moment format=\"h:mm a , DD MMMM\">{submission.date}</Moment>\n          </Table.Cell>\n        </Table.Row>\n      ));\n    }\n\n    return (\n      <div>\n        {this.state.loading ? (\n          <Dimmer style={{ backgroundColor: \"whitesmoke\" }} inverted active>\n            <Loader />\n          </Dimmer>\n        ) : (\n          <div>\n            <Container>\n              <Segment raised padded style={{ margin: \"10px auto\" }}>\n                <Grid>\n                  <Grid.Column width={3}>\n                    <Checkbox\n                      checked={this.state.correctOnly}\n                      onChange={this.onCorrectToggle}\n                      slider\n                      style={{ margin: \"auto\" }}\n                    />\n                  </Grid.Column>\n                  <Grid.Column width={9}>\n                    <Pagination\n                      defaultActivePage={1}\n                      ellipsisItem={{\n                        content: <Icon name=\"ellipsis horizontal\" />,\n                        icon: true\n                      }}\n                      firstItem={{\n                        content: <Icon name=\"angle double left\" />,\n                        icon: true\n                      }}\n                      lastItem={{\n                        content: <Icon name=\"angle double right\" />,\n                        icon: true\n                      }}\n                      prevItem={{\n                        content: <Icon name=\"angle left\" />,\n                        icon: true\n                      }}\n                      nextItem={{\n                        content: <Icon name=\"angle right\" />,\n                        icon: true\n                      }}\n                      onPageChange={this.onPageChange}\n                      pointing\n                      secondary\n                      totalPages={totalPages}\n                    />\n                  </Grid.Column>\n                </Grid>\n                <hr />\n\n                <Table color=\"teal\" padded celled>\n                  <Table.Header>\n                    <Table.Row>\n                      <Table.HeaderCell width={2}>S. No.</Table.HeaderCell>\n                      <Table.HeaderCell>Team</Table.HeaderCell>\n                      <Table.HeaderCell>Challenge</Table.HeaderCell>\n                      <Table.HeaderCell>Verdict</Table.HeaderCell>\n                      <Table.HeaderCell>Flag</Table.HeaderCell>\n                      <Table.HeaderCell>Time</Table.HeaderCell>\n                    </Table.Row>\n                  </Table.Header>\n                  <Table.Body>\n                    <Dimmer inverted active={this.state.isLoading}>\n                      <Loader />\n                    </Dimmer>\n                    {submissionsContent}\n                  </Table.Body>\n                </Table>\n              </Segment>\n            </Container>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Submissions;\n","import React, { Component } from \"react\";\nimport { Grid, Menu, Container } from \"semantic-ui-react\";\nimport Statistics from \"./Statistics\";\nimport Notifications from \"./Notifications\";\nimport Challenges from \"./Challenges\";\nimport Config from \"./Config\";\nimport Teams from \"./Teams\";\nimport Submissions from \"./Submissions\";\n\nclass Admin extends Component {\n  state = {\n    activeItem: \"challenges\",\n    activeItemContent: <Challenges />,\n    contents: {\n      statistics: <Statistics />,\n      notifications: <Notifications />,\n      challenges: <Challenges />,\n      config: <Config />,\n      teams: <Teams />,\n      submissions: <Submissions />\n    }\n  };\n\n  handleItemClick = (e, { name }) =>\n    this.setState({\n      activeItem: name,\n      activeItemContent: this.state.contents[name]\n    });\n\n  render() {\n    return (\n      <Container\n        fluid\n        style={{\n          margin: \"20px\"\n        }}\n      >\n        <Grid>\n          <Grid.Column width={3}>\n            <Menu fluid vertical pointing secondary>\n              <Menu.Item\n                name=\"statistics\"\n                style={{\n                  fontFamily: \"Iceland\",\n                  fontSize: \"25px\"\n                }}\n                active={this.state.activeItem === \"statistics\"}\n                onClick={this.handleItemClick}\n              />\n              <Menu.Item\n                name=\"challenges\"\n                style={{\n                  fontFamily: \"Iceland\",\n                  fontSize: \"25px\"\n                }}\n                active={this.state.activeItem === \"challenges\"}\n                onClick={this.handleItemClick}\n              />\n              <Menu.Item\n                name=\"notifications\"\n                style={{\n                  fontFamily: \"Iceland\",\n                  fontSize: \"25px\"\n                }}\n                active={this.state.activeItem === \"notifications\"}\n                onClick={this.handleItemClick}\n              />\n              <Menu.Item\n                name=\"submissions\"\n                style={{\n                  fontFamily: \"Iceland\",\n                  fontSize: \"25px\"\n                }}\n                active={this.state.activeItem === \"submissions\"}\n                onClick={this.handleItemClick}\n              />\n              <Menu.Item\n                name=\"teams\"\n                style={{\n                  fontFamily: \"Iceland\",\n                  fontSize: \"25px\"\n                }}\n                active={this.state.activeItem === \"teams\"}\n                onClick={this.handleItemClick}\n              />\n              <Menu.Item\n                name=\"config\"\n                style={{\n                  fontFamily: \"Iceland\",\n                  fontSize: \"25px\"\n                }}\n                active={this.state.activeItem === \"config\"}\n                onClick={this.handleItemClick}\n              />\n            </Menu>\n          </Grid.Column>\n          <Grid.Column width={\"12\"}>{this.state.activeItemContent}</Grid.Column>\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nexport default Admin;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { logoutTeam, setCurrentTeam } from \"./actions/authAction\";\n\nimport \"./App.css\";\nimport store from \"./store\";\n\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Landing from \"./components/Landing/Landing\";\nimport Register from \"./components/Register/Register\";\nimport Login from \"./components/Login/Login\";\nimport Challenges from \"./components/Challenges/Challenges\";\nimport PrivateRoute from \"./components/common/PrivateRoute\";\nimport Leaderboard from \"./components/Leaderboard/Leaderboard\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\nimport Notifications from \"./components/Notifications/Notifications\";\nimport AdminRoute from \"./components/common/AdminRoute\";\nimport Admin from \"./components/Admin/Admin\";\n\nif (localStorage.jwt) {\n  // Set auth header\n  setAuthToken(localStorage.jwt);\n\n  // Decode token\n  const teamData = jwt_decode(localStorage.jwt);\n\n  // Set current team in redux store\n  store.dispatch(setCurrentTeam(teamData));\n\n  const currentTime = Date.now() / 1000;\n  if (teamData.exp < currentTime) {\n    // Logut Team\n    store.dispatch(logoutTeam());\n\n    // Delete token\n    window.location.href = \"/login\";\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Navbar />\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/register\" component={Register} />\n          <Switch>\n            <PrivateRoute exact path=\"/challenges\" component={Challenges} />\n          </Switch>\n          <Switch>\n            <PrivateRoute exact path=\"/leaderboard\" component={Leaderboard} />\n          </Switch>\n          <Switch>\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n          </Switch>\n          <Switch>\n            <PrivateRoute\n              exact\n              path=\"/notifications\"\n              component={Notifications}\n            />\n          </Switch>\n          <Switch>\n            <AdminRoute exact path=\"/admin\" component={Admin} />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}